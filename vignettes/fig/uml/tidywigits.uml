@startuml

class Alignments {
+initialize(path,\n  files_tbl)
+parse_dupfreq(x)
+tidy_dupfreq(x)
+parse_markdup(x)
+tidy_markdup(x)
+clone(deep)
}

class Amber {
+initialize(path,\n  files_tbl)
+parse_bafpcf(x)
+tidy_bafpcf(x)
+parse_baftsv(x)
+tidy_baftsv(x)
+parse_contaminationtsv(x)
+tidy_contaminationtsv(x)
+parse_homozygousregion(x)
+tidy_homozygousregion(x)
+parse_qc(x)
+tidy_qc(x)
+clone(deep)
}

class Bamtools {
+initialize(path,\n  files_tbl)
+parse_summary(x)
+tidy_summary(x)
+parse_wgsmetrics(x)
+tidy_wgsmetrics(x)
+parse_flagstats(x)
+tidy_flagstats(x)
+parse_coverage(x)
+tidy_coverage(x)
+parse_fraglength(x)
+tidy_fraglength(x)
+parse_partitionstats(x)
+tidy_partitionstats(x)
+clone(deep)
}

class Chord {
+initialize(path,\n  files_tbl)
+parse_prediction(x)
+tidy_prediction(x)
+parse_signatures(x)
+tidy_signatures(x)
+clone(deep)
}

class Cobalt {
+initialize(path,\n  files_tbl)
+parse_gcmed(x)
+tidy_gcmed(x)
+parse_ratiomed(x)
+tidy_ratiomed(x)
+parse_ratiotsv(x)
+tidy_ratiotsv(x)
+parse_ratiopcf(x)
+tidy_ratiopcf(x)
+parse_version(x)
+tidy_version(x)
+clone(deep)
}

class Config {
+tool
+config
+raw_schemas_all
+tidy_schemas_all
+initialize(tool,\n  pkg)
+print(...)
+read(pkg)
+get_raw_patterns()
+get_raw_versions()
+get_raw_descriptions()
+get_raw_schemas_all()
+get_raw_schema(x,\n  v)
+are_raw_schemas_valid()
+get_tidy_descriptions()
+get_tidy_schemas_all()
+get_tidy_schema(x,\n  v,\n  subtbl)
+clone(deep)
}

class Cuppa {
+initialize(path,\n  files_tbl)
+parse_datacsv(x)
+tidy_datacsv(x)
+parse_feat(x)
+tidy_feat(x)
+parse_predsum(x)
+tidy_predsum(x)
+parse_datatsv(x)
+tidy_datatsv(x)
+clone(deep)
}

class Esvee {
+initialize(path,\n  files_tbl)
+parse_prepfraglen(x)
+tidy_prepfraglen(x)
+parse_prepdiscstats(x)
+tidy_prepdiscstats(x)
+parse_prepjunction(x)
+tidy_prepjunction(x)
+parse_assemblephased(x)
+tidy_assemblephased(x)
+parse_assembleassembly(x)
+tidy_assembleassembly(x)
+parse_assemblebreakend(x)
+tidy_assemblebreakend(x)
+parse_assemblealignment(x)
+tidy_assemblealignment(x)
+clone(deep)
}

class Flagstats {
+initialize(path,\n  files_tbl)
+parse_flagstats(x)
+tidy_flagstats(x)
+clone(deep)
}

class Isofox {
+initialize(path,\n  files_tbl)
+parse_summary(x)
+tidy_summary(x)
+parse_genedata(x)
+tidy_genedata(x)
+parse_transdata(x)
+tidy_transdata(x)
+parse_altsj(x)
+tidy_altsj(x)
+parse_retintron(x)
+tidy_retintron(x)
+parse_fusionsall(x)
+tidy_fusionsall(x)
+parse_fusionspass(x)
+tidy_fusionspass(x)
+parse_genecollection(x)
+tidy_genecollection(x)
+clone(deep)
}

class Lilac {
+initialize(path,\n  files_tbl)
+parse_summary(x)
+tidy_summary(x)
+parse_qc(x)
+tidy_qc(x)
+clone(deep)
}

class Linx {
+initialize(path,\n  files_tbl)
+list_files(type)
+parse_breakends(x)
+tidy_breakends(x)
+parse_clusters(x)
+tidy_clusters(x)
+parse_drivercatalog(x)
+tidy_drivercatalog(x)
+parse_drivers(x)
+tidy_drivers(x)
+parse_fusions(x)
+tidy_fusions(x)
+parse_links(x)
+tidy_links(x)
+parse_neoepitope(x)
+tidy_neoepitope(x)
+parse_svs(x)
+tidy_svs(x)
+parse_viscn(x)
+tidy_viscn(x)
+parse_visfusion(x)
+tidy_visfusion(x)
+parse_visgeneexon(x)
+tidy_visgeneexon(x)
+parse_visproteindomain(x)
+tidy_visproteindomain(x)
+parse_vissegments(x)
+tidy_vissegments(x)
+parse_vissvdata(x)
+tidy_vissvdata(x)
+parse_version(x)
+tidy_version(x)
+clone(deep)
}

class Purple {
+initialize(path,\n  files_tbl)
+list_files(type)
+parse_qc(x)
+tidy_qc(x)
+parse_cnvgenetsv(x)
+tidy_cnvgenetsv(x)
+parse_cnvsomtsv(x)
+tidy_cnvsomtsv(x)
+parse_drivercatalog(x)
+tidy_drivercatalog(x)
+parse_germdeltsv(x)
+tidy_germdeltsv(x)
+parse_purityrange(x)
+tidy_purityrange(x)
+parse_puritytsv(x)
+tidy_puritytsv(x)
+parse_somclonality(x)
+tidy_somclonality(x)
+parse_somhist(x)
+tidy_somhist(x)
+parse_version(x)
+tidy_version(x)
+clone(deep)
}

class Sage {
+initialize(path,\n  files_tbl)
+parse_bqrtsv(x)
+tidy_bqrtsv(x)
+parse_genecvg(x)
+tidy_genecvg(x)
+parse_exoncvg(x)
+tidy_exoncvg(x)
+clone(deep)
}

class Sigs {
+initialize(path,\n  files_tbl)
+parse_allocation(x)
+tidy_allocation(x)
+parse_snvcounts(x)
+tidy_snvcounts(x)
+clone(deep)
}

class Tool {
-needs_tidying
+name
+path
+config
+files
+tbls
+raw_schemas_all
+tidy_schemas_all
+get_tidy_schema
+get_raw_schema
+files_tbl
+initialize(name,\n  pkg,\n  path,\n  files_tbl)
+print(...)
+filter_files(include,\n  exclude)
+list_files(type)
+.parse_file(x,\n  name,\n  delim,\n  ...)
+.tidy_file(x,\n  name,\n  convert_types)
+.parse_file_nohead(x,\n  pname,\n  delim,\n  ...)
+.eval_func(fun,\n  envir)
+tidy(tidy,\n  keep_raw)
+write(odir,\n  format,\n  id,\n  dbconn)
+nemofy(odir,\n  format,\n  id,\n  dbconn,\n  include,\n  exclude)
+clone(deep)
}

class Virusbreakend {
+initialize(path,\n  files_tbl)
+parse_summary(x)
+tidy_summary(x)
+clone(deep)
}

class Virusinterpreter {
+initialize(path,\n  files_tbl,\n  tidy,\n  keep_raw)
+parse_annotated(x)
+tidy_annotated(x)
+clone(deep)
}

class Wigits {
+initialize(path)
+clone(deep)
}

class Workflow {
+name
+path
+tools
+files_tbl
-validate_tools(x)
+initialize(name,\n  path,\n  tools)
+print(...)
+filter_files(include,\n  exclude)
+list_files(type)
+tidy(tidy,\n  keep_raw)
+write(odir,\n  format,\n  id,\n  dbconn)
+nemofy(odir,\n  format,\n  id,\n  dbconn,\n  include,\n  exclude)
+get_raw_schemas_all()
+get_tidy_schemas_all()
+get_tbls()
+clone(deep)
}
Alignments <|-- Tool
Amber <|-- Tool
Bamtools <|-- Tool
Chord <|-- Tool
Cobalt <|-- Tool
Cuppa <|-- Tool
Esvee <|-- Tool
Flagstats <|-- Tool
Isofox <|-- Tool
Lilac <|-- Tool
Linx <|-- Tool
Purple <|-- Tool
Sage <|-- Tool
Sigs <|-- Tool
Virusbreakend <|-- Tool
Virusinterpreter <|-- Tool
Wigits <|-- Workflow
@enduml
