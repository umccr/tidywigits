% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Config.R
\name{Config}
\alias{Config}
\title{Config Object}
\description{
Config YAML file parsing.
}
\examples{
tool <- "isofox"
conf <- Config$new(tool)
conf$get_raw_patterns()
conf$get_raw_versions()
conf$get_raw_descriptions()
conf$get_raw_schemas_all()
conf$get_raw_schema("summary")
conf$are_raw_schemas_valid()
conf$get_tidy_descriptions()
conf$get_tidy_schemas_all()
conf$get_tidy_schema("summary")

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{tool}}{(\code{character(1)})\cr
Tool name.}

\item{\code{config}}{(\code{list()})\cr
Config list.}

\item{\code{raw_schemas_all}}{(\code{tibble()})\cr
All raw schemas for tool.}

\item{\code{tidy_schemas_all}}{(\code{tibble()})\cr
All tidy schemas for tool.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Config-new}{\code{Config$new()}}
\item \href{#method-Config-print}{\code{Config$print()}}
\item \href{#method-Config-read}{\code{Config$read()}}
\item \href{#method-Config-get_raw_patterns}{\code{Config$get_raw_patterns()}}
\item \href{#method-Config-get_raw_versions}{\code{Config$get_raw_versions()}}
\item \href{#method-Config-get_raw_descriptions}{\code{Config$get_raw_descriptions()}}
\item \href{#method-Config-get_raw_schemas_all}{\code{Config$get_raw_schemas_all()}}
\item \href{#method-Config-get_raw_schema}{\code{Config$get_raw_schema()}}
\item \href{#method-Config-are_raw_schemas_valid}{\code{Config$are_raw_schemas_valid()}}
\item \href{#method-Config-get_tidy_descriptions}{\code{Config$get_tidy_descriptions()}}
\item \href{#method-Config-get_tidy_schemas_all}{\code{Config$get_tidy_schemas_all()}}
\item \href{#method-Config-get_tidy_schema}{\code{Config$get_tidy_schema()}}
\item \href{#method-Config-clone}{\code{Config$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-new"></a>}}
\if{latex}{\out{\hypertarget{method-Config-new}{}}}
\subsection{Method \code{new()}}{
Create a new Config object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$new(tool)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tool}}{(\code{character(1)})\cr
Tool name.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-print"></a>}}
\if{latex}{\out{\hypertarget{method-Config-print}{}}}
\subsection{Method \code{print()}}{
Print details about the Tool.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(ignored).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-read"></a>}}
\if{latex}{\out{\hypertarget{method-Config-read}{}}}
\subsection{Method \code{read()}}{
Read YAML configs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$read()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A \code{list()} with the parsed data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-get_raw_patterns"></a>}}
\if{latex}{\out{\hypertarget{method-Config-get_raw_patterns}{}}}
\subsection{Method \code{get_raw_patterns()}}{
Return all output file patterns.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$get_raw_patterns()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-get_raw_versions"></a>}}
\if{latex}{\out{\hypertarget{method-Config-get_raw_versions}{}}}
\subsection{Method \code{get_raw_versions()}}{
Return all output file schema versions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$get_raw_versions()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-get_raw_descriptions"></a>}}
\if{latex}{\out{\hypertarget{method-Config-get_raw_descriptions}{}}}
\subsection{Method \code{get_raw_descriptions()}}{
Return all output file descriptions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$get_raw_descriptions()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-get_raw_schemas_all"></a>}}
\if{latex}{\out{\hypertarget{method-Config-get_raw_schemas_all}{}}}
\subsection{Method \code{get_raw_schemas_all()}}{
Return all output file schemas.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$get_raw_schemas_all()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-get_raw_schema"></a>}}
\if{latex}{\out{\hypertarget{method-Config-get_raw_schema}{}}}
\subsection{Method \code{get_raw_schema()}}{
Get raw file schema.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$get_raw_schema(x, v = "latest")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
Raw file name.}

\item{\code{v}}{(\code{character(1)})\cr
Version (def: latest).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-are_raw_schemas_valid"></a>}}
\if{latex}{\out{\hypertarget{method-Config-are_raw_schemas_valid}{}}}
\subsection{Method \code{are_raw_schemas_valid()}}{
Validate schema.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$are_raw_schemas_valid()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-get_tidy_descriptions"></a>}}
\if{latex}{\out{\hypertarget{method-Config-get_tidy_descriptions}{}}}
\subsection{Method \code{get_tidy_descriptions()}}{
Return all tidy tibble descriptions.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$get_tidy_descriptions()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-get_tidy_schemas_all"></a>}}
\if{latex}{\out{\hypertarget{method-Config-get_tidy_schemas_all}{}}}
\subsection{Method \code{get_tidy_schemas_all()}}{
Return all tidy tibble schemas.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$get_tidy_schemas_all()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-get_tidy_schema"></a>}}
\if{latex}{\out{\hypertarget{method-Config-get_tidy_schema}{}}}
\subsection{Method \code{get_tidy_schema()}}{
Get tidy tbl schema.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$get_tidy_schema(x, v = "latest", subtbl = "tbl1")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
Tidy tbl name.}

\item{\code{v}}{(\code{character(1)})\cr
Version of schema (def: latest).}

\item{\code{subtbl}}{(\code{character(1)})\cr
Subtbl to use (def: tbl1).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Config-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Config-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Config$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
