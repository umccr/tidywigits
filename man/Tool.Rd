% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Tool.R
\name{Tool}
\alias{Tool}
\title{Tool Object}
\description{
Base class for all wigits tools.
}
\examples{
\dontrun{
name <- "alignments"
path <- here::here(
  "nogit/oa_v2"
)
tool <- Tool$new(name = name, path = path)
files_tbl <- list_files_dir("nogit/oa_v1")
Tool$new(name = "amber", path = "foo", files_tbl = files_tbl)
}

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{(\code{character(1)})\cr
Name of tool.}

\item{\code{path}}{(\code{character(1)})\cr
Output directory of tool.}

\item{\code{config}}{(\code{Config()})\cr
Config of tool.}

\item{\code{files}}{(\code{tibble()})\cr
Tibble of files matching available Tool patterns.}

\item{\code{raw_schemas_all}}{(\code{tibble()})\cr
All raw schemas for tool.}

\item{\code{tidy_schemas_all}}{(\code{tibble()})\cr
All tidy schemas for tool.}

\item{\code{.tidy_schema}}{(\verb{function()})\cr
Get specific tidy schema.}

\item{\code{.raw_schema}}{(\verb{function()})\cr
Get specific raw schema.}

\item{\code{.files_tbl}}{(\code{tibble(n)})\cr
Tibble of files from \code{list_files_dir}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Tool-new}{\code{Tool$new()}}
\item \href{#method-Tool-print}{\code{Tool$print()}}
\item \href{#method-Tool-list_files}{\code{Tool$list_files()}}
\item \href{#method-Tool-.parse_file}{\code{Tool$.parse_file()}}
\item \href{#method-Tool-.tidy_file}{\code{Tool$.tidy_file()}}
\item \href{#method-Tool-.parse_file_nohead}{\code{Tool$.parse_file_nohead()}}
\item \href{#method-Tool-.eval_func}{\code{Tool$.eval_func()}}
\item \href{#method-Tool-.tidy}{\code{Tool$.tidy()}}
\item \href{#method-Tool-clone}{\code{Tool$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tool-new"></a>}}
\if{latex}{\out{\hypertarget{method-Tool-new}{}}}
\subsection{Method \code{new()}}{
Create a new Tool object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tool$new(name, path = NULL, files_tbl = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{(\code{character(1)})\cr
Name of tool.}

\item{\code{path}}{(\code{character(1)})\cr
Output directory of tool. If \code{files_tbl} is supplied, this basically gets
ignored.}

\item{\code{files_tbl}}{(\code{tibble(n)})\cr
Tibble of files from \code{list_files_dir}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tool-print"></a>}}
\if{latex}{\out{\hypertarget{method-Tool-print}{}}}
\subsection{Method \code{print()}}{
Print details about the Tool.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tool$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(ignored).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tool-list_files"></a>}}
\if{latex}{\out{\hypertarget{method-Tool-list_files}{}}}
\subsection{Method \code{list_files()}}{
List files in given tool directory.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tool$list_files(type = "file")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{(\code{character(1)})\cr
File types(s) to return (e.g. any, file, directory, symlink).
See \code{fs::dir_info}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tool-.parse_file"></a>}}
\if{latex}{\out{\hypertarget{method-Tool-.parse_file}{}}}
\subsection{Method \code{.parse_file()}}{
Parse file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tool$.parse_file(x, name, delim = "\\t", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
File path.}

\item{\code{name}}{(\code{character(1)})\cr
Parser name (e.g. "breakends" - see docs).}

\item{\code{delim}}{(\code{character(1)})\cr
File delimiter.}

\item{\code{...}}{Passed on to \code{readr::read_delim}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tool-.tidy_file"></a>}}
\if{latex}{\out{\hypertarget{method-Tool-.tidy_file}{}}}
\subsection{Method \code{.tidy_file()}}{
Tidy file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tool$.tidy_file(x, name, convert_types = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
File path.}

\item{\code{name}}{(\code{character(1)})\cr
Parser name (e.g. "breakends" - see docs).}

\item{\code{convert_types}}{(\code{logical(1)})\cr
Convert field types based on schema.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tool-.parse_file_nohead"></a>}}
\if{latex}{\out{\hypertarget{method-Tool-.parse_file_nohead}{}}}
\subsection{Method \code{.parse_file_nohead()}}{
Parse headless file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tool$.parse_file_nohead(x, pname, delim = "\\t", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
File path.}

\item{\code{pname}}{(\code{character(1)})\cr
Parser name (e.g. "breakends" - see docs).}

\item{\code{delim}}{(\code{character(1)})\cr
File delimiter.}

\item{\code{...}}{Passed on to \code{readr::read_delim}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tool-.eval_func"></a>}}
\if{latex}{\out{\hypertarget{method-Tool-.eval_func}{}}}
\subsection{Method \code{.eval_func()}}{
Evaluate function in the context of the Tool's
environment.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tool$.eval_func(fun, envir = self)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{(\code{character(1)})\cr
Function from Tool to evaluate.}

\item{\code{envir}}{(\code{environment()})\cr
Environment to evaluate the function within.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tool-.tidy"></a>}}
\if{latex}{\out{\hypertarget{method-Tool-.tidy}{}}}
\subsection{Method \code{.tidy()}}{
Tidy a list of files.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tool$.tidy(envir = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{envir}}{(\code{environment()})\cr
Environment to evaluate the function within.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tool-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Tool-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tool$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
