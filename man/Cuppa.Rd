% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cuppa.R
\name{Cuppa}
\alias{Cuppa}
\title{Cuppa Object}
\description{
Cuppa file parsing and manipulation.
}
\examples{
\dontrun{
path <- here::here(
  "nogit"
)
cup <- Cuppa$new(path)
}
}
\section{Super class}{
\code{\link[tidywigits:Tool]{tidywigits::Tool}} -> \code{Cuppa}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Cuppa-new}{\code{Cuppa$new()}}
\item \href{#method-Cuppa-parse_datacsv}{\code{Cuppa$parse_datacsv()}}
\item \href{#method-Cuppa-tidy_datacsv}{\code{Cuppa$tidy_datacsv()}}
\item \href{#method-Cuppa-parse_feat}{\code{Cuppa$parse_feat()}}
\item \href{#method-Cuppa-tidy_feat}{\code{Cuppa$tidy_feat()}}
\item \href{#method-Cuppa-parse_predsum}{\code{Cuppa$parse_predsum()}}
\item \href{#method-Cuppa-tidy_predsum}{\code{Cuppa$tidy_predsum()}}
\item \href{#method-Cuppa-parse_datatsv}{\code{Cuppa$parse_datatsv()}}
\item \href{#method-Cuppa-tidy_datatsv}{\code{Cuppa$tidy_datatsv()}}
\item \href{#method-Cuppa-clone}{\code{Cuppa$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tidywigits" data-topic="Tool" data-id=".eval_func"><a href='../../tidywigits/html/Tool.html#method-Tool-.eval_func'><code>tidywigits::Tool$.eval_func()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tidywigits" data-topic="Tool" data-id=".parse_file"><a href='../../tidywigits/html/Tool.html#method-Tool-.parse_file'><code>tidywigits::Tool$.parse_file()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tidywigits" data-topic="Tool" data-id=".parse_file_nohead"><a href='../../tidywigits/html/Tool.html#method-Tool-.parse_file_nohead'><code>tidywigits::Tool$.parse_file_nohead()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tidywigits" data-topic="Tool" data-id=".tidy_file"><a href='../../tidywigits/html/Tool.html#method-Tool-.tidy_file'><code>tidywigits::Tool$.tidy_file()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tidywigits" data-topic="Tool" data-id="filter_files"><a href='../../tidywigits/html/Tool.html#method-Tool-filter_files'><code>tidywigits::Tool$filter_files()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tidywigits" data-topic="Tool" data-id="list_files"><a href='../../tidywigits/html/Tool.html#method-Tool-list_files'><code>tidywigits::Tool$list_files()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tidywigits" data-topic="Tool" data-id="nemofy"><a href='../../tidywigits/html/Tool.html#method-Tool-nemofy'><code>tidywigits::Tool$nemofy()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tidywigits" data-topic="Tool" data-id="print"><a href='../../tidywigits/html/Tool.html#method-Tool-print'><code>tidywigits::Tool$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tidywigits" data-topic="Tool" data-id="tidy"><a href='../../tidywigits/html/Tool.html#method-Tool-tidy'><code>tidywigits::Tool$tidy()</code></a></span></li>
<li><span class="pkg-link" data-pkg="tidywigits" data-topic="Tool" data-id="write"><a href='../../tidywigits/html/Tool.html#method-Tool-write'><code>tidywigits::Tool$write()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cuppa-new"></a>}}
\if{latex}{\out{\hypertarget{method-Cuppa-new}{}}}
\subsection{Method \code{new()}}{
Create a new Cuppa object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cuppa$new(path = NULL, files_tbl = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{(\code{character(1)})\cr
Output directory of tool. If \code{files_tbl} is supplied, this basically gets
ignored.}

\item{\code{files_tbl}}{(\code{tibble(n)})\cr
Tibble of files from \code{list_files_dir}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cuppa-parse_datacsv"></a>}}
\if{latex}{\out{\hypertarget{method-Cuppa-parse_datacsv}{}}}
\subsection{Method \code{parse_datacsv()}}{
Read \code{cup.data.csv} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cuppa$parse_datacsv(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
Path to file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cuppa-tidy_datacsv"></a>}}
\if{latex}{\out{\hypertarget{method-Cuppa-tidy_datacsv}{}}}
\subsection{Method \code{tidy_datacsv()}}{
Tidy \code{cup.data.csv} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cuppa$tidy_datacsv(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
Path to file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cuppa-parse_feat"></a>}}
\if{latex}{\out{\hypertarget{method-Cuppa-parse_feat}{}}}
\subsection{Method \code{parse_feat()}}{
Read \code{cuppa_data.tsv.gz} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cuppa$parse_feat(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
Path to file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cuppa-tidy_feat"></a>}}
\if{latex}{\out{\hypertarget{method-Cuppa-tidy_feat}{}}}
\subsection{Method \code{tidy_feat()}}{
Tidy \code{cuppa_data.tsv.gz} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cuppa$tidy_feat(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
Path to file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cuppa-parse_predsum"></a>}}
\if{latex}{\out{\hypertarget{method-Cuppa-parse_predsum}{}}}
\subsection{Method \code{parse_predsum()}}{
Read \code{cuppa.pred_summ.tsv} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cuppa$parse_predsum(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
Path to file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cuppa-tidy_predsum"></a>}}
\if{latex}{\out{\hypertarget{method-Cuppa-tidy_predsum}{}}}
\subsection{Method \code{tidy_predsum()}}{
Tidy \code{cuppa.pred_summ.tsv} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cuppa$tidy_predsum(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
Path to file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cuppa-parse_datatsv"></a>}}
\if{latex}{\out{\hypertarget{method-Cuppa-parse_datatsv}{}}}
\subsection{Method \code{parse_datatsv()}}{
Read \code{cuppa.vis_data.tsv} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cuppa$parse_datatsv(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
Path to file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cuppa-tidy_datatsv"></a>}}
\if{latex}{\out{\hypertarget{method-Cuppa-tidy_datatsv}{}}}
\subsection{Method \code{tidy_datatsv()}}{
Tidy \code{cuppa.vis_data.tsv} file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cuppa$tidy_datatsv(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{(\code{character(1)})\cr
Path to file.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Cuppa-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Cuppa-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Cuppa$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
