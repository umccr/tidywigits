---
format: gfm
---

<!-- README.md is generated from README.qmd. Please edit that file -->

```{r}
#| include: false
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "",
  fig.path = "man/figures/README-",
  out.width = "100%"
)
```

```{r}
#| label: pkg_load
#| echo: false
#| message: false
#| warning: false
require(tidywigits)
```

# üß¨‚ú® tidywigits: Tidy WiGiTS Outputs

- Docs: <https://umccr.github.io/tidywigits/>

```{r}
#| label: setup
#| echo: false
# template path
tp <- "inst/doc-templates"
```

## Overview

{tidywigits} is an R package that parses and tidies outputs from the [WiGiTS]
suite of genome and transcriptome analysis tools for cancer research and diagnostics,
created by the Hartwig Medical Foundation.

In short, it traverses through a directory containing results from one or more
runs of WiGiTS tools, parses any files it recognises, tidies
them up (which includes data reshaping, normalisation, column name cleanup etc.),
and writes them to the output format of choice e.g. Apache Parquet, PostgreSQL,
TSV etc..

[WiGiTS]: <https://github.com/hartwigmedical/hmftools> "WiGiTS suite"

**TODO: ADD GIF**

## Quick Links

- üìö [Documentation](https://umccr.github.io/tidywigits/)
- üé® [Examples](#-examples)
- üçï [Installation](#-installation)
- üåÄ [CLI](#-cli)

## üé® Examples

You can output tidywigits results to a variety of formats, including TSV, Parquet,
or write directly to a PostgreSQL database.

- Parquet:

```r
in_dir <- "path/to/wigits/results"
out_dir <- "path/to/tidied/output"
oa <- Oncoanalyser$new(in_dir)
res1 <- oa$nemofy(odir = out_dir, format = "parquet", id = "parquet_example")
```

- PostgreSQL (this should work with any typical database that has an R
  driver, e.g. MySQL, SQLite, etc., just make sure you create the correct
  connection object):

```r
dbconn <- DBI::dbConnect(
  drv = RPostgres::Postgres(),
  dbname = "nemo",
  user = "orcabus"
)
res2 <-
  oa$nemofy(
    format = "db",
    id = "db_example",
    dbconn = dbconn
)
```

## üçï Installation

{{< include /inst/doc-templates/installation/_installation.qmd >}}

## üåÄ CLI

A `tidywigits.R` command line interface is available for convenience.

- If you're using the conda package, the `tidywigits.R` command will already be
  available inside the activated conda environment.
- If you're _not_ using the conda package, you need to export the
  `tidywigits/inst/cli/` directory to your `PATH` in order to use `tidywigits.R`.

```{bash}
#| label: cli1
#| echo: true
#| eval: false
tw_cli=$(Rscript -e 'x = system.file("cli", package = "tidywigits"); cat(x, "\n")' | xargs)
export PATH="${tw_cli}:${PATH}"
```

```{bash}
#| label: cli2
#| echo: false
#| prompt: true
tw_cli=$(Rscript -e 'x = system.file("cli", package = "tidywigits"); cat(x, "\n")' | xargs)
export PATH="${tw_cli}:${PATH}"

echo "tidywigits.R --version" & tidywigits.R --version
echo ""
echo "#-----------------------------------#"
echo "tidywigits.R --help" & tidywigits.R --help
echo ""
echo "#-----------------------------------#"
echo "#------- Tidy ----------------------#"
echo "tidywigits.R tidy --help" & tidywigits.R tidy --help
echo ""
echo "#-----------------------------------#"
echo "#------- List ----------------------#"
echo "tidywigits.R list --help" & tidywigits.R list --help
echo ""
```

