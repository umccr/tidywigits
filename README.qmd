---
format: gfm
---

<!-- README.md is generated from README.qmd. Please edit that file -->

```{r}
#| label: knitr_opts
#| include: false
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "",
  fig.path = "man/figures/README-",
  out.width = "100%"
)
```

```{r}
#| label: pkg_load
#| echo: false
#| message: false
#| warning: false
require(tidywigits)
```

# 🧬✨ tidywigits: Tidy WiGiTS Outputs

📚 Docs: https://umccr.github.io/tidywigits/

## Overview

{{< include /inst/doc-templates/introduction/_overview.qmd >}}

## 🎨 Examples

You can output tidywigits results to a variety of formats, including TSV, Parquet,
or write directly to a PostgreSQL database.

- Parquet:

```r
in_dir <- "path/to/wigits/results"
out_dir <- "path/to/tidied/output"
oa <- Oncoanalyser$new(in_dir)
res1 <- oa$nemofy(odir = out_dir, format = "parquet", id = "parquet_example")
```

- PostgreSQL (this should work with any typical database that has an R
  driver, e.g. MySQL, SQLite, etc., just make sure you create the correct
  connection object):

```r
dbconn <- DBI::dbConnect(
  drv = RPostgres::Postgres(),
  dbname = "nemo",
  user = "orcabus"
)
res2 <-
  oa$nemofy(
    format = "db",
    id = "db_example",
    dbconn = dbconn
)
```

## 🍕 Installation

{{< include /inst/doc-templates/installation/_r.qmd >}}

Alternatively, a conda package is available that includes the R
is available to install directly from GitHub. A conda package is also
available, which includes the R package and all dependencies. A Docker image
is also available, which includes the conda package and all dependencies.

For more details see: <https://umccr.github.io/tidywigits/installation/>


## 🌀 CLI

A `tidywigits.R` command line interface is available for convenience.

- If you're using the conda package, the `tidywigits.R` command will already be
  available inside the activated conda environment.
- If you're _not_ using the conda package, you need to export the
  `tidywigits/inst/cli/` directory to your `PATH` in order to use `tidywigits.R`.

```{bash}
#| label: cli1
#| echo: true
#| eval: false
tw_cli=$(Rscript -e 'x = system.file("cli", package = "tidywigits"); cat(x, "\n")' | xargs)
export PATH="${tw_cli}:${PATH}"
```

```{bash}
#| label: cli2
#| echo: false
#| prompt: true
tw_cli=$(Rscript -e 'x = system.file("cli", package = "tidywigits"); cat(x, "\n")' | xargs)
export PATH="${tw_cli}:${PATH}"

echo "tidywigits.R --version" & tidywigits.R --version
echo ""
echo "#-----------------------------------#"
echo "tidywigits.R --help" & tidywigits.R --help
echo ""
echo "#-----------------------------------#"
echo "#------- Tidy ----------------------#"
echo "tidywigits.R tidy --help" & tidywigits.R tidy --help
echo ""
echo "#-----------------------------------#"
echo "#------- List ----------------------#"
echo "tidywigits.R list --help" & tidywigits.R list --help
echo ""
```

