[{"path":[]},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement peterdiakumis@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://umccr.github.io/tidywigits/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://umccr.github.io/tidywigits/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Collaborative Centre Genomic Cancer Medicine (CCGCM) - Genomics Platform Group Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://umccr.github.io/tidywigits/articles/NEWS.html","id":"v0-0-4-2025-08-19","dir":"Articles","previous_headings":"","what":"v0.0.4 (2025-08-19)","title":"NEWS","text":"v0.0.4 - v0.0.3 diff Major documentation update - see pr138 details. test data update full README re-write pkgdown vignette re-org add vignettes raw/tidy schemas, uml diagram add pkgdown/extra.scss CSS customisation add logo","code":""},{"path":"https://umccr.github.io/tidywigits/articles/NEWS.html","id":"v0-0-3-2025-08-04","dir":"Articles","previous_headings":"","what":"v0.0.3 (2025-08-04)","title":"NEWS","text":"v0.0.3 - v0.0.2 diff Fixed bug normalizePath getting called NULL output directory db format case (pr133).","code":""},{"path":"https://umccr.github.io/tidywigits/articles/NEWS.html","id":"v0-0-2-2025-07-14","dir":"Articles","previous_headings":"","what":"v0.0.2 (2025-07-14)","title":"NEWS","text":"v0.0.2 - v0.0.1 diff Mostly Shiny, Conda, Docker, pkgdown GitHub Actions support. Conda: add recipe rattler-builder (pr124, iss4) Docker: add Dockerfile (pr130) Shiny: add summary app (pr122) CLI: Add listing tidy include/exclude support (pr116) Add pkgdown support (pr125, iss37) Add DVC support purple test data (pr126, iss59) Remove File class","code":""},{"path":"https://umccr.github.io/tidywigits/articles/NEWS.html","id":"v0-0-1-2025-06-19","dir":"Articles","previous_headings":"","what":"v0.0.1 (2025-06-19)","title":"NEWS","text":"Initial release tidywigits. R pkg skeleton (pr6) Add Config, File Tool classes (pr12) Add Workflow class (pr99, iss97) Add Oncoanalyser class (pr52, pr101, iss39) Add bump--version (pr10, iss3) Add pre-commit hooks (pr8, iss2) Add Makefile air.toml (pr7) Alignments (pr28, pr79, iss17, iss77) Amber (pr14, iss13) Bamtools (pr44, pr66, iss62, iss16) Chord (pr29, pr38, iss18, iss38) Cobalt (pr33, iss15) Cuppa (pr30, pr68, iss19, iss67) Esvee (pr87, iss61) Flagstats (pr45, pr46, iss20) Isofox (pr80, iss76) Lilac (pr31, iss21) Linx (pr50, pr89, iss22, iss88) Purple (pr36, pr51, iss23, iss49) Sage (pr48, pr72, pr73, iss24, iss71, iss57) Sigs (pr47, iss25) Virusbreakend (pr42, iss26) Virusinterpreter (pr40, pr65, iss27, iss41) versioning (pr64, iss43) guesser (pr69, iss63) Setup (pr92, iss60) write functionality (pr98, iss95) optionally output raw parsed tibbles (pr94, iss91) UML diagram (pr107, iss106) DB schema (pr111, iss110) CLI support (pr114)","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://umccr.github.io/tidywigits/articles/developers.html","id":"data-version-control","dir":"Articles","previous_headings":"","what":"Data Version Control","title":"Developers","text":"Instead committing big data files git, can store files remotely (e.g. Google Drive, AWS S3, Cloudflare R2) just keep track data updates git using DVC. R package uses data files running code examples tests, rendering vignettes. simple dvc pull pull data remote storage allow processes take place.","code":""},{"path":"https://umccr.github.io/tidywigits/articles/installation.html","id":"r","dir":"Articles","previous_headings":"","what":"R","title":"Installation","text":"Using {remotes} directly GitHub:","code":"install.packages(\"remotes\") remotes::install_github(\"umccr/tidywigits\") # latest main commit remotes::install_github(\"umccr/tidywigits@v0.0.4\") # released version"},{"path":"https://umccr.github.io/tidywigits/articles/installation.html","id":"conda","dir":"Articles","previous_headings":"","what":"Conda","title":"Installation","text":"conda package available umccr channel https://anaconda.org/umccr/r-tidywigits.","code":"conda create \\   -n tidywigits_env \\   -c umccr -c conda-forge \\   r-tidywigits==0.0.4  conda activate tidywigits_env"},{"path":"https://umccr.github.io/tidywigits/articles/installation.html","id":"docker","dir":"Articles","previous_headings":"","what":"Docker","title":"Installation","text":"Docker image available GitHub Container Registry https://github.com/umccr/tidywigits/pkgs/container/tidywigits.","code":"docker pull --platform linux/amd64 ghcr.io/umccr/tidywigits:0.0.4"},{"path":"https://umccr.github.io/tidywigits/articles/installation.html","id":"pixi","dir":"Articles","previous_headings":"","what":"Pixi","title":"Installation","text":"use Pixi, can create new isolated environment deployed conda package: can create task run tidywigits.R CLI script: activate environment use tidywigits directly R environment:","code":"pixi init -c umccr -c conda-forge ./tidy_env cd ./tidy_env pixi add r-tidywigits==X.X.X pixi task add tw \"tidywigits.R\" pixi run tw --help pixi shell R library(tidywigits)"},{"path":"https://umccr.github.io/tidywigits/articles/structure.html","id":"config","dir":"Articles","previous_headings":"","what":"Config","title":"Structure","text":"Config object contains functionality interacting YAML configuration files part {tidywigits}. configuration files (inst/config) specify schemas, types, patterns field descriptions raw input files tidy output tbls. See ?Config.","code":""},{"path":"https://umccr.github.io/tidywigits/articles/structure.html","id":"raw","dir":"Articles","previous_headings":"Config","what":"raw","title":"Structure","text":"intro patterns descriptions versions schemas Let’s look information raw PURPLE config, instance: can access individual fields classic R list-like manner, using $ sign. Patterns used fish relevant files directory listing. PURPLE raw file patterns. File descriptions based available Hartwig documentation. PURPLE raw file descriptions. Versions used distinguish changes schema individual tool versions. example, LINX v1.25, several columns dropped breakends table, reflected available LINX schemas. now using latest default version based recent schema tests, discrepancies see labelled accordingly version tool generated file different schema. PURPLE raw file versions. raw schemas specify column name type (e.g. character (c), integer (), float/double (d)) input file (just showing couple ):","code":"tool <- \"purple\" toolu <- toupper(tool) conf <- Config$new(tool) conf ## #--- Config purple ---# ##  ## |var   |value  | ## |:-----|:------| ## |tool  |purple | ## |nraw  |10     | ## |ntidy |10     | conf$get_raw_patterns() |>   knitr::kable(caption = glue(\"{toolu} raw file patterns.\")) conf$get_raw_descriptions() |>   knitr::kable(caption = glue(\"{toolu} raw file descriptions.\")) conf$get_raw_versions() |>   knitr::kable(caption = glue(\"{toolu} raw file versions.\")) (s <- conf$get_raw_schemas_all()) ## # A tibble: 10 × 3 ##    name          version schema            ##    <chr>         <chr>   <list>            ##  1 cnvgenetsv    latest  <tibble [18 × 2]> ##  2 cnvsomtsv     latest  <tibble [16 × 2]> ##  3 drivercatalog latest  <tibble [17 × 2]> ##  4 germdeltsv    latest  <tibble [16 × 2]> ##  5 purityrange   latest  <tibble [6 × 2]>  ##  6 puritytsv     latest  <tibble [25 × 2]> ##  7 qc            latest  <tibble [2 × 2]>  ##  8 somclonality  latest  <tibble [6 × 2]>  ##  9 somhist       latest  <tibble [3 × 2]>  ## 10 version       latest  <tibble [2 × 2]> s |>   dplyr::filter(name == \"puritytsv\") |>   dplyr::select(\"schema\") |>   tidyr::unnest(\"schema\") ## # A tibble: 25 × 2 ##    field                type  ##    <chr>                <chr> ##  1 purity               d     ##  2 normFactor           d     ##  3 score                d     ##  4 diploidProportion    d     ##  5 ploidy               d     ##  6 gender               c     ##  7 status               c     ##  8 polyclonalProportion d     ##  9 minPurity            d     ## 10 maxPurity            d     ## # ℹ 15 more rows"},{"path":"https://umccr.github.io/tidywigits/articles/structure.html","id":"tidy","dir":"Articles","previous_headings":"Config","what":"tidy","title":"Structure","text":"intro descriptions schemas Now let’s look information tidy PURPLE config. difference raw tidy configs mostly column names (standardised lowercase separated underscores, .e. snake_case), raw files get split multiple tidy tables (e.g. normalisation purposes). Tidy descriptions raw descriptions now. PURPLE tidy file descriptions.","code":"conf$get_tidy_descriptions() |>   knitr::kable(caption = glue(\"{toolu} tidy file descriptions.\")) (s <- conf$get_tidy_schemas_all()) ## # A tibble: 10 × 4 ##    name          version tbl   schema            ##    <chr>         <chr>   <chr> <list>            ##  1 cnvgenetsv    latest  tbl1  <tibble [18 × 3]> ##  2 cnvsomtsv     latest  tbl1  <tibble [16 × 3]> ##  3 drivercatalog latest  tbl1  <tibble [17 × 3]> ##  4 germdeltsv    latest  tbl1  <tibble [16 × 3]> ##  5 purityrange   latest  tbl1  <tibble [6 × 3]>  ##  6 puritytsv     latest  tbl1  <tibble [25 × 3]> ##  7 qc            latest  tbl1  <tibble [12 × 3]> ##  8 somclonality  latest  tbl1  <tibble [6 × 3]>  ##  9 somhist       latest  tbl1  <tibble [3 × 3]>  ## 10 version       latest  tbl1  <tibble [2 × 3]> s |>   dplyr::filter(.data$name == \"puritytsv\") |>   dplyr::select(\"schema\") |>   tidyr::unnest(\"schema\") ## # A tibble: 25 × 3 ##    field                 type  description                                                           ##    <chr>                 <chr> <chr>                                                                 ##  1 purity                d     purity of tumor in the sample                                         ##  2 norm_factor           d     internal factor to convert tumor ratio to cn.                         ##  3 score                 d     score of fit (lower is better)                                        ##  4 diploid_proportion    d     proportion of cn regions that have 1 (+- 0.2) minor and major allele  ##  5 ploidy                d     average ploidy of the tumor sample after adjusting for purity         ##  6 gender                c     one of male or female                                                 ##  7 status                c     either pass or one or more warning or fail status                     ##  8 polyclonal_proportion d     proportion of copy number regions that are more than 0.25 from a who… ##  9 min_purity            d     minimum purity with score within 10% of best                          ## 10 max_purity            d     maximum purity with score within 10% of best                          ## # ℹ 15 more rows"},{"path":"https://umccr.github.io/tidywigits/articles/structure.html","id":"tool","dir":"Articles","previous_headings":"","what":"Tool","title":"Structure","text":"Tool main organisation class file parsers tidiers. contains functions parsing tidying typical CSV/TSV files (column names), TXT files column names missing. Currently utilises simple readr::read_delim function {readr} package reads data memory. See ?Tool. simple parsers used 80-90% cases, future can optimise parsing needed faster packages {data.table}, {duckdb-r}/{duckplyr} {r-polars}. initialise config list tidy filter write nemofy can different Tool children classes inherit (override) functions fields Tool parent class. example, can create Tool object PURPLE follows: Initialise Purple object: Config object also constructed based name supplied - used internally find files interest infer schemas: can list files can parsed list_files(): can parse tidy files interest using tidy function. Note function called object assigned anywhere: can also focus subset files tidy using filter_files() function. include exclude arguments can specify parsers include exclude analysis: tidying data interest, can write tidy tibbles various formats, like Apache Parquet, PostgreSQL, CSV/TSV R’s RDS. can see id specified added written files additional nemo_id column. can used e.g. distinguish results different runs data pipeline. writing database like PostgreSQL, another column nemo_pfix used distinguish results run tool. nemofy function convenient wrapper process filtering, tidying, writing.","code":"ppl_path <- system.file(\"extdata/oa/purple\", package = \"tidywigits\") ppl <- Purple$new(path = ppl_path) # each class comes with a print function ppl ## #--- Tool purple ---# ##  ## |var    |value                                                        | ## |:------|:------------------------------------------------------------| ## |name   |purple                                                       | ## |path   |/home/runner/work/_temp/Library/tidywigits/extdata/oa/purple | ## |files  |11                                                           | ## |tidied |FALSE                                                        | ppl$config ## #--- Config purple ---# ##  ## |var   |value  | ## |:-----|:------| ## |tool  |purple | ## |nraw  |10     | ## |ntidy |10     | ppl$config$get_raw_patterns() ## # A tibble: 10 × 2 ##    name          value                                                      ##    <chr>         <chr>                                                      ##  1 cnvgenetsv    \"\\\\.purple\\\\.cnv\\\\.gene\\\\.tsv$\"                            ##  2 cnvsomtsv     \"\\\\.purple\\\\.cnv\\\\.somatic\\\\.tsv$\"                         ##  3 drivercatalog \"\\\\.purple\\\\.driver\\\\.catalog\\\\.(germline|somatic)\\\\.tsv$\" ##  4 germdeltsv    \"\\\\.purple\\\\.germline\\\\.deletion\\\\.tsv$\"                   ##  5 purityrange   \"\\\\.purple\\\\.purity\\\\.range\\\\.tsv$\"                        ##  6 puritytsv     \"\\\\.purple\\\\.purity\\\\.tsv$\"                                ##  7 qc            \"\\\\.purple\\\\.qc$\"                                          ##  8 somclonality  \"\\\\.purple\\\\.somatic\\\\.clonality\\\\.tsv$\"                   ##  9 somhist       \"\\\\.purple\\\\.somatic\\\\.hist\\\\.tsv$\"                        ## 10 version       \"^purple\\\\.version$\" ppl$config$get_raw_schema(\"puritytsv\") ## # A tibble: 25 × 2 ##    field                type  ##    <chr>                <chr> ##  1 purity               d     ##  2 normFactor           d     ##  3 score                d     ##  4 diploidProportion    d     ##  5 ploidy               d     ##  6 gender               c     ##  7 status               c     ##  8 polyclonalProportion d     ##  9 minPurity            d     ## 10 maxPurity            d     ## # ℹ 15 more rows ppl$config$get_tidy_schema(\"puritytsv\") ## # A tibble: 25 × 3 ##    field                 type  description                                                           ##    <chr>                 <chr> <chr>                                                                 ##  1 purity                d     purity of tumor in the sample                                         ##  2 norm_factor           d     internal factor to convert tumor ratio to cn.                         ##  3 score                 d     score of fit (lower is better)                                        ##  4 diploid_proportion    d     proportion of cn regions that have 1 (+- 0.2) minor and major allele  ##  5 ploidy                d     average ploidy of the tumor sample after adjusting for purity         ##  6 gender                c     one of male or female                                                 ##  7 status                c     either pass or one or more warning or fail status                     ##  8 polyclonal_proportion d     proportion of copy number regions that are more than 0.25 from a who… ##  9 min_purity            d     minimum purity with score within 10% of best                          ## 10 max_purity            d     maximum purity with score within 10% of best                          ## # ℹ 15 more rows (lf <- ppl$list_files()) ## # A tibble: 11 × 10 ##    tool_parser          parser bname    size lastmodified        path  pattern prefix schema   group ##    <glue>               <chr>  <chr> <fs::b> <dttm>              <chr> <chr>   <glue> <list>   <glu> ##  1 purple_version       versi… purp…      39 2025-08-19 05:27:46 /hom… \"^purp… versi… <tibble>       ##  2 purple_cnvgenetsv    cnvge… samp…   1.44K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  3 purple_cnvsomtsv     cnvso… samp…   1.32K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  4 purple_drivercatalog drive… samp…     819 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  5 purple_drivercatalog drive… samp…     468 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  6 purple_germdeltsv    germd… samp…   1.24K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  7 purple_purityrange   purit… samp…     484 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  8 purple_puritytsv     purit… samp…     462 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  9 purple_qc            qc     samp…     228 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ## 10 purple_somclonality  somcl… samp…     451 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ## 11 purple_somhist       somhi… samp…     138 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble> lf |> dplyr::slice(1) |> str() ## tibble [1 × 10] (S3: tbl_df/tbl/data.frame) ##  $ tool_parser : 'glue' chr \"purple_version\" ##  $ parser      : chr \"version\" ##  $ bname       : chr \"purple.version\" ##  $ size        : 'fs_bytes' num 39 ##  $ lastmodified: POSIXct[1:1], format: \"2025-08-19 05:27:46\" ##  $ path        : chr \"/home/runner/work/_temp/Library/tidywigits/extdata/oa/purple/purple.version\" ##  $ pattern     : chr \"^purple\\\\.version$\" ##  $ prefix      : 'glue' chr \"version\" ##  $ schema      :List of 1 ##   ..$ : tibble [2 × 2] (S3: tbl_df/tbl/data.frame) ##   .. ..$ field: chr [1:2] \"variable\" \"value\" ##   .. ..$ type : chr [1:2] \"c\" \"c\" ##  $ group       : 'glue' chr \"\" # this will create a new field tbls containing the tidy data (and optionally # the 'raw' parsed data) ppl$tidy(tidy = TRUE, keep_raw = TRUE) ppl$tbls ## # A tibble: 11 × 11 ##    tool_parser parser bname    size lastmodified        path  pattern prefix group raw      tidy     ##    <glue>      <chr>  <chr> <fs::b> <dttm>              <chr> <chr>   <glue> <glu> <list>   <list>   ##  1 purple_ver… versi… purp…      39 2025-08-19 05:27:46 /hom… \"^purp… versi…       <tibble> <tibble> ##  2 purple_cnv… cnvge… samp…   1.44K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl…       <tibble> <tibble> ##  3 purple_cnv… cnvso… samp…   1.32K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl…       <tibble> <tibble> ##  4 purple_dri… drive… samp…     819 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl…       <tibble> <tibble> ##  5 purple_dri… drive… samp…     468 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl…       <tibble> <tibble> ##  6 purple_ger… germd… samp…   1.24K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl…       <tibble> <tibble> ##  7 purple_pur… purit… samp…     484 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl…       <tibble> <tibble> ##  8 purple_pur… purit… samp…     462 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl…       <tibble> <tibble> ##  9 purple_qc   qc     samp…     228 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl…       <tibble> <tibble> ## 10 purple_som… somcl… samp…     451 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl…       <tibble> <tibble> ## 11 purple_som… somhi… samp…     138 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl…       <tibble> <tibble> ppl$tbls$raw[[8]] |> dplyr::glimpse() ## Rows: 1 ## Columns: 25 ## $ purity                  <dbl> 0.87 ## $ normFactor              <dbl> 0.5283 ## $ score                   <dbl> 0.841 ## $ diploidProportion       <dbl> 0.0036 ## $ ploidy                  <dbl> 4.05 ## $ gender                  <chr> \"MALE\" ## $ status                  <chr> \"NORMAL\" ## $ polyclonalProportion    <dbl> 0.1501 ## $ minPurity               <dbl> 0.79 ## $ maxPurity               <dbl> 0.96 ## $ minPloidy               <dbl> 3.95 ## $ maxPloidy               <dbl> 4.2 ## $ minDiploidProportion    <dbl> 9e-04 ## $ maxDiploidProportion    <dbl> 0.004 ## $ somaticPenalty          <dbl> 0 ## $ wholeGenomeDuplication  <chr> \"true\" ## $ msIndelsPerMb           <dbl> 0.0238 ## $ msStatus                <chr> \"MSS\" ## $ tml                     <dbl> 29 ## $ tmlStatus               <chr> \"LOW\" ## $ tmbPerMb                <dbl> 1.1161 ## $ tmbStatus               <chr> \"LOW\" ## $ svTumorMutationalBurden <dbl> 64 ## $ runMode                 <chr> \"TUMOR_GERMLINE\" ## $ targeted                <chr> \"false\" # the tidy tibbles are nested to allow for more than one tidy tibble per file ppl$tbls$tidy[[8]][[\"data\"]][[1]] |> dplyr::glimpse() ## Rows: 1 ## Columns: 25 ## $ purity                     <dbl> 0.87 ## $ norm_factor                <dbl> 0.5283 ## $ score                      <dbl> 0.841 ## $ diploid_proportion         <dbl> 0.0036 ## $ ploidy                     <dbl> 4.05 ## $ gender                     <chr> \"MALE\" ## $ status                     <chr> \"NORMAL\" ## $ polyclonal_proportion      <dbl> 0.1501 ## $ min_purity                 <dbl> 0.79 ## $ max_purity                 <dbl> 0.96 ## $ min_ploidy                 <dbl> 3.95 ## $ max_ploidy                 <dbl> 4.2 ## $ min_diploid_proportion     <dbl> 9e-04 ## $ max_diploid_proportion     <dbl> 0.004 ## $ somatic_penalty            <dbl> 0 ## $ whole_genome_duplication   <chr> \"true\" ## $ ms_indels_per_mb           <dbl> 0.0238 ## $ ms_status                  <chr> \"MSS\" ## $ tml                        <dbl> 29 ## $ tml_status                 <chr> \"LOW\" ## $ tmb_per_mb                 <dbl> 1.1161 ## $ tmb_status                 <chr> \"LOW\" ## $ sv_tumor_mutational_burden <dbl> 64 ## $ run_mode                   <chr> \"TUMOR_GERMLINE\" ## $ targeted                   <chr> \"false\" # create new Purple object ppl2 <- Purple$new(path = ppl_path) ppl2$files ## # A tibble: 11 × 10 ##    tool_parser          parser bname    size lastmodified        path  pattern prefix schema   group ##    <glue>               <chr>  <chr> <fs::b> <dttm>              <chr> <chr>   <glue> <list>   <glu> ##  1 purple_version       versi… purp…      39 2025-08-19 05:27:46 /hom… \"^purp… versi… <tibble>       ##  2 purple_cnvgenetsv    cnvge… samp…   1.44K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  3 purple_cnvsomtsv     cnvso… samp…   1.32K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  4 purple_drivercatalog drive… samp…     819 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  5 purple_drivercatalog drive… samp…     468 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  6 purple_germdeltsv    germd… samp…   1.24K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  7 purple_purityrange   purit… samp…     484 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  8 purple_puritytsv     purit… samp…     462 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  9 purple_qc            qc     samp…     228 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ## 10 purple_somclonality  somcl… samp…     451 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ## 11 purple_somhist       somhi… samp…     138 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble> ppl2$filter_files(include = c(\"purple_qc\", \"purple_cnvsomtsv\")) ppl2$files ## # A tibble: 2 × 10 ##   tool_parser      parser    bname      size lastmodified        path  pattern prefix schema   group ##   <glue>           <chr>     <chr>   <fs::b> <dttm>              <chr> <chr>   <glue> <list>   <glu> ## 1 purple_cnvsomtsv cnvsomtsv sample…   1.32K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ## 2 purple_qc        qc        sample…     228 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble> ppl2$tidy() # first need to tidy outdir1 <- tempdir() fmt <- \"csv\" ppl2$write(odir = outdir1, format = fmt, id = \"run123\") wfiles <- fs::dir_info(outdir1) |> dplyr::select(1:5) wfiles |>   dplyr::mutate(bname = basename(.data$path)) |>   dplyr::select(\"bname\", \"size\", \"type\") ## # A tibble: 17 × 3 ##    bname                                  size type  ##    <chr>                           <fs::bytes> <fct> ##  1 file2858145e191c                      4.71K file  ##  2 file285817c13815                      4.71K file  ##  3 file28582a9bdf63                      4.71K file  ##  4 file28583357cd4e                      4.71K file  ##  5 file28583cb08685                      4.71K file  ##  6 file2858440e0950                      4.71K file  ##  7 file28584955028d                      4.71K file  ##  8 file2858499242e7                      4.71K file  ##  9 file28587390064f                      4.71K file  ## 10 file285874d245ca                      4.71K file  ## 11 file285876d1c889                      4.71K file  ## 12 file28587cb3bc21                      4.71K file  ## 13 file28587d382e33                      4.71K file  ## 14 file28587fcc52a6                      4.71K file  ## 15 rmarkdown-str285844bb6b9.html         1.13K file  ## 16 sample1_purple_cnvsomtsv.csv.gz         631 file  ## 17 sample1_purple_qc.csv.gz                186 file # readr::read_csv(wfiles$path[1], show_col_types = F) # see bug #137 ppl3 <- Purple$new(path = ppl_path) outdir2 <- file.path(tempdir(), \"ppl3\") |> fs::dir_create() ppl3$files ## # A tibble: 11 × 10 ##    tool_parser          parser bname    size lastmodified        path  pattern prefix schema   group ##    <glue>               <chr>  <chr> <fs::b> <dttm>              <chr> <chr>   <glue> <list>   <glu> ##  1 purple_version       versi… purp…      39 2025-08-19 05:27:46 /hom… \"^purp… versi… <tibble>       ##  2 purple_cnvgenetsv    cnvge… samp…   1.44K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  3 purple_cnvsomtsv     cnvso… samp…   1.32K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  4 purple_drivercatalog drive… samp…     819 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  5 purple_drivercatalog drive… samp…     468 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  6 purple_germdeltsv    germd… samp…   1.24K 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  7 purple_purityrange   purit… samp…     484 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  8 purple_puritytsv     purit… samp…     462 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ##  9 purple_qc            qc     samp…     228 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ## 10 purple_somclonality  somcl… samp…     451 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble>       ## 11 purple_somhist       somhi… samp…     138 2025-08-19 05:27:46 /hom… \"\\\\.pu… sampl… <tibble> ppl3$nemofy(   odir = outdir2,   format = \"tsv\",   id = \"run_ppl3\",   exclude = c(\"purple_cnvgenetsv\", \"purple_cnvsomtsv\", \"purple_drivercatalog\", \"purple_germdeltsv\") ) wfiles2 <- fs::dir_info(outdir2) |>   dplyr::mutate(bname = basename(.data$path)) wfiles2 |>   dplyr::select(\"bname\", \"size\", \"type\") ## # A tibble: 6 × 3 ##   bname                                     size type  ##   <chr>                              <fs::bytes> <fct> ## 1 sample1_purple_purityrange.tsv.gz          204 file  ## 2 sample1_purple_puritytsv.tsv.gz            303 file  ## 3 sample1_purple_qc.tsv.gz                   186 file  ## 4 sample1_purple_somclonality.tsv.gz         154 file  ## 5 sample1_purple_somhist.tsv.gz              108 file  ## 6 version_purple_version.tsv.gz               77 file readr::read_tsv(wfiles2$path[2], show_col_types = F) ## # A tibble: 1 × 26 ##   nemo_id  purity norm_factor score diploid_proportion ploidy gender status polyclonal_proportion ##   <chr>     <dbl>       <dbl> <dbl>              <dbl>  <dbl> <chr>  <chr>                  <dbl> ## 1 run_ppl3   0.87       0.528 0.841             0.0036   4.05 MALE   NORMAL                 0.150 ## # ℹ 17 more variables: min_purity <dbl>, max_purity <dbl>, min_ploidy <dbl>, max_ploidy <dbl>, ## #   min_diploid_proportion <dbl>, max_diploid_proportion <dbl>, somatic_penalty <dbl>, ## #   whole_genome_duplication <lgl>, ms_indels_per_mb <dbl>, ms_status <chr>, tml <dbl>, ## #   tml_status <chr>, tmb_per_mb <dbl>, tmb_status <chr>, sv_tumor_mutational_burden <dbl>, ## #   run_mode <chr>, targeted <lgl>"},{"path":"https://umccr.github.io/tidywigits/articles/structure.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Structure","text":"Workflow consists list one Tools. can construct certain Workflow different Tools, allow parsing writing tidy tables variety bioinformatic tools. See ?Workflow. Oncoanalyser Nextflow pipeline uses several tools [WiGiTS], can construct Oncoanalyser class Workflow child based suite Tools tidywigits R package. Similarly Tool, Workflow object contains functions filter_files, list_files, tidy, write nemofy:","code":"oa <- system.file(\"extdata/oa/purple\", package = \"tidywigits\") |>   Oncoanalyser$new() outdir3 <- file.path(tempdir(), \"oa\") |> fs::dir_create() oa$list_files() ## # A tibble: 11 × 10 ##    parser        bname      size lastmodified        path  pattern tool_parser prefix schema   group ##    <chr>         <chr>   <fs::b> <dttm>              <chr> <chr>   <glue>      <glue> <list>   <glu> ##  1 version       purple…      39 2025-08-19 05:27:46 /hom… \"^purp… purple_ver… versi… <tibble>       ##  2 cnvgenetsv    sample…   1.44K 2025-08-19 05:27:46 /hom… \"\\\\.pu… purple_cnv… sampl… <tibble>       ##  3 cnvsomtsv     sample…   1.32K 2025-08-19 05:27:46 /hom… \"\\\\.pu… purple_cnv… sampl… <tibble>       ##  4 drivercatalog sample…     819 2025-08-19 05:27:46 /hom… \"\\\\.pu… purple_dri… sampl… <tibble>       ##  5 drivercatalog sample…     468 2025-08-19 05:27:46 /hom… \"\\\\.pu… purple_dri… sampl… <tibble>       ##  6 germdeltsv    sample…   1.24K 2025-08-19 05:27:46 /hom… \"\\\\.pu… purple_ger… sampl… <tibble>       ##  7 purityrange   sample…     484 2025-08-19 05:27:46 /hom… \"\\\\.pu… purple_pur… sampl… <tibble>       ##  8 puritytsv     sample…     462 2025-08-19 05:27:46 /hom… \"\\\\.pu… purple_pur… sampl… <tibble>       ##  9 qc            sample…     228 2025-08-19 05:27:46 /hom… \"\\\\.pu… purple_qc   sampl… <tibble>       ## 10 somclonality  sample…     451 2025-08-19 05:27:46 /hom… \"\\\\.pu… purple_som… sampl… <tibble>       ## 11 somhist       sample…     138 2025-08-19 05:27:46 /hom… \"\\\\.pu… purple_som… sampl… <tibble> x <- oa$nemofy(   odir = outdir3,   format = \"tsv\",   id = \"oa_run1\",   exclude = c(\"cobalt_ratiotsv\", \"amber_baftsv\", \"isofox_altsj\", \"isofox_transdata\") ) wfiles3 <- fs::dir_info(outdir3) |>   dplyr::select(1:5) |>   dplyr::mutate(bname = basename(.data$path)) wfiles3 |>   dplyr::select(\"bname\", \"size\", \"type\") ## # A tibble: 11 × 3 ##    bname                                               size type  ##    <chr>                                        <fs::bytes> <fct> ##  1 sample1_germline_purple_drivercatalog.tsv.gz         363 file  ##  2 sample1_purple_cnvgenetsv.tsv.gz                     444 file  ##  3 sample1_purple_cnvsomtsv.tsv.gz                      633 file  ##  4 sample1_purple_drivercatalog.tsv.gz                  293 file  ##  5 sample1_purple_germdeltsv.tsv.gz                     479 file  ##  6 sample1_purple_purityrange.tsv.gz                    202 file  ##  7 sample1_purple_puritytsv.tsv.gz                      303 file  ##  8 sample1_purple_qc.tsv.gz                             185 file  ##  9 sample1_purple_somclonality.tsv.gz                   153 file  ## 10 sample1_purple_somhist.tsv.gz                        107 file  ## 11 version_purple_version.tsv.gz                         76 file readr::read_tsv(wfiles3$path[5], show_col_types = F) ## # A tibble: 10 × 17 ##    nemo_id gene     chromosome chromosome_band region_start region_end depth_window_count exon_start ##    <chr>   <chr>    <chr>      <chr>                  <dbl>      <dbl>              <dbl>      <dbl> ##  1 oa_run1 ZYG11B   chr1       p32.3               52797001   52798000                  1          8 ##  2 oa_run1 RPL31P12 chr1       p31.1               72300641   72346158                 45          1 ##  3 oa_run1 AKNAD1   chr1       p13.3              108824397  108829338                  5         11 ##  4 oa_run1 SLC16A1… chr1       p13.2              113006001  113012000                  6          4 ##  5 oa_run1 LRIG2-DT chr1       p13.2              113006001  113012000                  6          3 ##  6 oa_run1 GABPB2   chr1       q21.3              151073001  151117000                 44          2 ##  7 oa_run1 RPS29P29 chr1       q21.3              151073001  151117000                 44          1 ##  8 oa_run1 LCE1E    chr1       q21.3              152787001  152798000                 10          2 ##  9 oa_run1 LCE1D    chr1       q21.3              152787001  152798000                 10          1 ## 10 oa_run1 PTPRVP   chr1       q32.1              202171001  202173000                  1          6 ## # ℹ 9 more variables: exon_end <dbl>, detection_method <chr>, germline_status <chr>, ## #   tumor_status <chr>, germline_cn <dbl>, tumor_cn <dbl>, filter <chr>, cohort_frequency <dbl>, ## #   reported <lgl>"},{"path":[]},{"path":"https://umccr.github.io/tidywigits/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Diakumis. Author, maintainer.","code":""},{"path":"https://umccr.github.io/tidywigits/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Diakumis P (2025). tidywigits: Tidy WiGiTS. R package version 0.0.4, https://github.com/umccr/tidywigits.","code":"@Manual{,   title = {tidywigits: Tidy WiGiTS},   author = {Peter Diakumis},   year = {2025},   note = {R package version 0.0.4},   url = {https://github.com/umccr/tidywigits}, }"},{"path":"https://umccr.github.io/tidywigits/index.html","id":"id_-tidy-wigits-outputs","dir":"","previous_headings":"","what":"Tidy WiGiTS Outputs","title":"Tidy WiGiTS Outputs","text":"Installation Files/tables supported Tidy schemas R6 structure Developer notes Changelog","code":""},{"path":"https://umccr.github.io/tidywigits/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Tidy WiGiTS Outputs","text":"{tidywigits} R package parses tidies outputs WiGiTS suite genome transcriptome analysis tools cancer research diagnostics, created Hartwig Medical Foundation. short, traverses directory containing results one runs WiGiTS tools, parses files recognises, tidies (includes data reshaping, normalisation, column name cleanup etc.), writes output format choice e.g. Apache Parquet, PostgreSQL, TSV, RDS.","code":""},{"path":"https://umccr.github.io/tidywigits/index.html","id":"id_-quick-start","dir":"","previous_headings":"","what":"🎨 Quick Start","title":"Tidy WiGiTS Outputs","text":"starting point {tidywigits} directory WiGiTS results. Let’s look sample data (tracked via DVC) https://github.com/umccr/tidywigits/tree/main/inst/extdata/oa: can parse, tidy , write WiGiTS results e.g. Parquet format PostgreSQL database follows: Parquet: PostgreSQL: IMPORTANT: support VCFs active development.","code":"system.file(\"extdata/oa\", package = \"tidywigits\") |>   fs::dir_tree(invert = TRUE, glob = \"*.dvc\") /Users/pdiakumis/Library/R/arm64/4.5/library/tidywigits/extdata/oa ├── alignments │   └── sample1.duplicate_freq.tsv ├── amber │   ├── sample1.amber.baf.pcf │   ├── sample1.amber.contamination.tsv │   ├── sample1.amber.homozygousregion.tsv │   └── sample1.amber.qc ├── bamtools │   └── sample1.wgsmetrics ├── chord │   ├── sample1.chord.mutation_contexts.tsv │   └── sample1.chord.prediction.tsv ├── cobalt │   ├── cobalt.version │   ├── sample1.cobalt.gc.median.tsv │   ├── sample1.cobalt.ratio.median.tsv │   └── sample1.cobalt.ratio.pcf ├── cuppa │   ├── sample1.cuppa.pred_summ.tsv │   ├── sample1.cuppa.vis_data.tsv │   └── sample1.cuppa_data.tsv.gz ├── lilac │   ├── sample1.lilac.candidates.coverage.tsv │   ├── sample1.lilac.qc.tsv │   └── sample1.lilac.tsv ├── linx │   ├── germline_annotations │   │   ├── linx.version │   │   ├── sample1.linx.germline.breakend.tsv │   │   ├── sample1.linx.germline.clusters.tsv │   │   ├── sample1.linx.germline.disruption.tsv │   │   ├── sample1.linx.germline.driver.catalog.tsv │   │   ├── sample1.linx.germline.links.tsv │   │   └── sample1.linx.germline.svs.tsv │   └── somatic_annotations │       ├── linx.version │       ├── sample1.linx.breakend.tsv │       ├── sample1.linx.clusters.tsv │       ├── sample1.linx.driver.catalog.tsv │       ├── sample1.linx.drivers.tsv │       ├── sample1.linx.fusion.tsv │       ├── sample1.linx.links.tsv │       ├── sample1.linx.svs.tsv │       ├── sample1.linx.vis_copy_number.tsv │       ├── sample1.linx.vis_fusion.tsv │       ├── sample1.linx.vis_gene_exon.tsv │       ├── sample1.linx.vis_protein_domain.tsv │       ├── sample1.linx.vis_segments.tsv │       └── sample1.linx.vis_sv_data.tsv ├── purple │   ├── purple.version │   ├── sample1.purple.cnv.gene.tsv │   ├── sample1.purple.cnv.somatic.tsv │   ├── sample1.purple.driver.catalog.germline.tsv │   ├── sample1.purple.driver.catalog.somatic.tsv │   ├── sample1.purple.germline.deletion.tsv │   ├── sample1.purple.purity.range.tsv │   ├── sample1.purple.purity.tsv │   ├── sample1.purple.qc │   ├── sample1.purple.somatic.clonality.tsv │   └── sample1.purple.somatic.hist.tsv ├── sage │   ├── germline │   │   ├── sample1.sage.bqr.tsv │   │   ├── sample2.sage.bqr.tsv │   │   ├── sample2.sage.exon.medians.tsv │   │   └── sample2.sage.gene.coverage.tsv │   └── somatic │       ├── sample1.sage.bqr.tsv │       ├── sample1.sage.exon.medians.tsv │       ├── sample1.sage.gene.coverage.tsv │       └── sample2.sage.bqr.tsv ├── sigs │   ├── sample1.sig.allocation.tsv │   └── sample1.sig.snv_counts.csv ├── virusbreakend │   └── sample1.virusbreakend.vcf.summary.tsv └── virusinterpreter     └── sample1.virus.annotated.tsv in_dir <- system.file(\"extdata/oa\", package = \"tidywigits\") out_dir <- tempdir() |> fs::dir_create(\"parquet_example\") oa <- Oncoanalyser$new(in_dir) res <- oa$nemofy(odir = out_dir, format = \"parquet\", id = \"parquet_example\") fs::dir_info(out_dir) |>   dplyr::mutate(bname = basename(.data$path)) |>   dplyr::select(\"bname\", \"size\", \"type\") # A tibble: 64 × 3    bname                                              size type     <chr>                                       <fs::bytes> <fct>  1 sample1_2_sage_bqrtsv.parquet                      3.1K file   2 sample1_alignments_dupfreq.parquet                1.95K file   3 sample1_amber_bafpcf.parquet                      3.27K file   4 sample1_amber_contaminationtsv.parquet            4.13K file   5 sample1_amber_homozygousregion.parquet            3.18K file   6 sample1_amber_qc.parquet                          2.35K file   7 sample1_bamtools_wgsmetrics_histo.parquet         4.19K file   8 sample1_bamtools_wgsmetrics_metrics.parquet      10.12K file   9 sample1_chord_prediction.parquet                  3.43K file  10 sample1_chord_signatures.parquet                  2.17K file  # ℹ 54 more rows in_dir <- system.file(\"extdata/oa\", package = \"tidywigits\") out_dir <- tempdir() |> fs::dir_create(\"parquet_example\") oa <- Oncoanalyser$new(in_dir) dbconn <- DBI::dbConnect(   drv = RPostgres::Postgres(),   dbname = \"nemo\",   user = \"orcabus\" ) res <- oa$nemofy(   format = \"db\",   id = \"db_example\",   dbconn = dbconn )"},{"path":"https://umccr.github.io/tidywigits/index.html","id":"id_-installation","dir":"","previous_headings":"","what":"🍕 Installation","title":"Tidy WiGiTS Outputs","text":"Using {remotes} directly GitHub: Alternatively: conda package: https://anaconda.org/umccr/r-tidywigits Docker image: https://github.com/umccr/tidywigits/pkgs/container/tidywigits details see: https://umccr.github.io/tidywigits/articles/installation","code":"install.packages(\"remotes\") remotes::install_github(\"umccr/tidywigits\") # latest main commit remotes::install_github(\"umccr/tidywigits@v0.0.3\") # released version"},{"path":"https://umccr.github.io/tidywigits/index.html","id":"id_-cli","dir":"","previous_headings":"","what":"🌀 CLI","title":"Tidy WiGiTS Outputs","text":"tidywigits.R command line interface available convenience. ’re using conda package, tidywigits.R command already available inside activated conda environment. ’re using conda package, need export tidywigits/inst/cli/ directory PATH order use tidywigits.R.","code":"tw_cli=$(Rscript -e 'x = system.file(\"cli\", package = \"tidywigits\"); cat(x, \"\\n\")' | xargs) export PATH=\"${tw_cli}:${PATH}\" $ tidywigits.R --version tidywigits.R 0.0.3  #-----------------------------------# $ tidywigits.R --help usage: tidywigits.R [-h] [-v] {tidy,list} ...  🐠 WiGiTS Output Tidying 🐢  positional arguments:   {tidy,list}    sub-command help     tidy         Tidy WiGiTS Workflow Outputs     list         List Parsable WiGiTS Workflow Outputs  options:   -h, --help     show this help message and exit   -v, --version  show program's version number and exit ' #-----------------------------------# #------- Tidy ----------------------# $ tidywigits.R tidy --help usage: tidywigits.R tidy [-h] -d IN_DIR [-o OUT_DIR] [-f FORMAT] -i ID                          [--dbname DBNAME] [--dbuser DBUSER]                          [--include INCLUDE] [--exclude EXCLUDE] [-q]  options:   -h, --help            show this help message and exit   -d IN_DIR, --in_dir IN_DIR                         🚑 Input directory.   -o OUT_DIR, --out_dir OUT_DIR                         🚀 Output directory.   -f FORMAT, --format FORMAT                         🎨 Format of output (def: parquet). Choices: parquet,                         db, tsv, csv, rds   -i ID, --id ID        🚩 ID to use for this run.   --dbname DBNAME       🐶 Database name.   --dbuser DBUSER       🐢 Database user.   --include INCLUDE     ✅ Include only these files (comma,sep).   --exclude EXCLUDE     ❌ Exclude these files (comma,sep).   -q, --quiet           😴 Shush all the logs.  #-----------------------------------# #------- List ----------------------# $ tidywigits.R list --help usage: tidywigits.R list [-h] -d IN_DIR [-q]  options:   -h, --help            show this help message and exit   -d IN_DIR, --in_dir IN_DIR                         🚑 Input directory.   -q, --quiet           😴 Shush all the logs."},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":null,"dir":"Reference","previous_headings":"","what":"Alignments Object — Alignments","title":"Alignments Object — Alignments","text":"Alignments file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Alignments Object — Alignments","text":"tidywigits::Tool -> Alignments","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Alignments Object — Alignments","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Alignments Object — Alignments","text":"Alignments$new() Alignments$parse_dupfreq() Alignments$tidy_dupfreq() Alignments$parse_markdup() Alignments$tidy_markdup() Alignments$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Alignments Object — Alignments","text":"Create new Alignments object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alignments Object — Alignments","text":"","code":"Alignments$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alignments Object — Alignments","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"method-parse-dupfreq-","dir":"Reference","previous_headings":"","what":"Method parse_dupfreq()","title":"Alignments Object — Alignments","text":"Read duplicate_freq.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Alignments Object — Alignments","text":"","code":"Alignments$parse_dupfreq(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alignments Object — Alignments","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"method-tidy-dupfreq-","dir":"Reference","previous_headings":"","what":"Method tidy_dupfreq()","title":"Alignments Object — Alignments","text":"Tidy duplicate_freq.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Alignments Object — Alignments","text":"","code":"Alignments$tidy_dupfreq(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alignments Object — Alignments","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"method-parse-markdup-","dir":"Reference","previous_headings":"","what":"Method parse_markdup()","title":"Alignments Object — Alignments","text":"Read md.metrics file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Alignments Object — Alignments","text":"","code":"Alignments$parse_markdup(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alignments Object — Alignments","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"method-tidy-markdup-","dir":"Reference","previous_headings":"","what":"Method tidy_markdup()","title":"Alignments Object — Alignments","text":"Tidy md.metrics file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Alignments Object — Alignments","text":"","code":"Alignments$tidy_markdup(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alignments Object — Alignments","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Alignments Object — Alignments","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Alignments Object — Alignments","text":"","code":"Alignments$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alignments Object — Alignments","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Alignments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alignments Object — Alignments","text":"","code":"cls <- Alignments indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"alignments_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) #> NULL list.files(odir, pattern = \"parquet\", full.names = FALSE) #> character(0)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":null,"dir":"Reference","previous_headings":"","what":"Amber Object — Amber","title":"Amber Object — Amber","text":"Amber file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Amber Object — Amber","text":"tidywigits::Tool -> Amber","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Amber Object — Amber","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Amber Object — Amber","text":"Amber$new() Amber$parse_bafpcf() Amber$tidy_bafpcf() Amber$parse_baftsv() Amber$tidy_baftsv() Amber$parse_contaminationtsv() Amber$tidy_contaminationtsv() Amber$parse_homozygousregion() Amber$tidy_homozygousregion() Amber$parse_qc() Amber$tidy_qc() Amber$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Amber Object — Amber","text":"Create new Amber object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-parse-bafpcf-","dir":"Reference","previous_headings":"","what":"Method parse_bafpcf()","title":"Amber Object — Amber","text":"Read baf.pcf file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$parse_bafpcf(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-tidy-bafpcf-","dir":"Reference","previous_headings":"","what":"Method tidy_bafpcf()","title":"Amber Object — Amber","text":"Tidy baf.pcf file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$tidy_bafpcf(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-parse-baftsv-","dir":"Reference","previous_headings":"","what":"Method parse_baftsv()","title":"Amber Object — Amber","text":"Read baf.tsv.gz file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$parse_baftsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-tidy-baftsv-","dir":"Reference","previous_headings":"","what":"Method tidy_baftsv()","title":"Amber Object — Amber","text":"Tidy baf.tsv.gz file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$tidy_baftsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-parse-contaminationtsv-","dir":"Reference","previous_headings":"","what":"Method parse_contaminationtsv()","title":"Amber Object — Amber","text":"Read contamination.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$parse_contaminationtsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-tidy-contaminationtsv-","dir":"Reference","previous_headings":"","what":"Method tidy_contaminationtsv()","title":"Amber Object — Amber","text":"Tidy contamination.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$tidy_contaminationtsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-parse-homozygousregion-","dir":"Reference","previous_headings":"","what":"Method parse_homozygousregion()","title":"Amber Object — Amber","text":"Read homozygousregion.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$parse_homozygousregion(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-tidy-homozygousregion-","dir":"Reference","previous_headings":"","what":"Method tidy_homozygousregion()","title":"Amber Object — Amber","text":"Tidy homozygousregion.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$tidy_homozygousregion(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-parse-qc-","dir":"Reference","previous_headings":"","what":"Method parse_qc()","title":"Amber Object — Amber","text":"Read qc file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$parse_qc(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-tidy-qc-","dir":"Reference","previous_headings":"","what":"Method tidy_qc()","title":"Amber Object — Amber","text":"Tidy qc file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$tidy_qc(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Amber Object — Amber","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Amber Object — Amber","text":"","code":"Amber$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amber Object — Amber","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Amber.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Amber Object — Amber","text":"","code":"cls <- Amber indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"amber_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #> [1] \"sample1_amber_bafpcf.parquet\"           #> [2] \"sample1_amber_contaminationtsv.parquet\" #> [3] \"sample1_amber_homozygousregion.parquet\" #> [4] \"sample1_amber_qc.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":null,"dir":"Reference","previous_headings":"","what":"Bamtools Object — Bamtools","title":"Bamtools Object — Bamtools","text":"Bamtools file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Bamtools Object — Bamtools","text":"tidywigits::Tool -> Bamtools","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Bamtools Object — Bamtools","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Bamtools Object — Bamtools","text":"Bamtools$new() Bamtools$parse_summary() Bamtools$tidy_summary() Bamtools$parse_wgsmetrics() Bamtools$tidy_wgsmetrics() Bamtools$parse_flagstats() Bamtools$tidy_flagstats() Bamtools$parse_coverage() Bamtools$tidy_coverage() Bamtools$parse_fraglength() Bamtools$tidy_fraglength() Bamtools$parse_partitionstats() Bamtools$tidy_partitionstats() Bamtools$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Bamtools Object — Bamtools","text":"Create new Bamtools object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-parse-summary-","dir":"Reference","previous_headings":"","what":"Method parse_summary()","title":"Bamtools Object — Bamtools","text":"Read summary.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$parse_summary(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-tidy-summary-","dir":"Reference","previous_headings":"","what":"Method tidy_summary()","title":"Bamtools Object — Bamtools","text":"Tidy summary.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$tidy_summary(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-parse-wgsmetrics-","dir":"Reference","previous_headings":"","what":"Method parse_wgsmetrics()","title":"Bamtools Object — Bamtools","text":"Read wgsmetrics file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$parse_wgsmetrics(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-tidy-wgsmetrics-","dir":"Reference","previous_headings":"","what":"Method tidy_wgsmetrics()","title":"Bamtools Object — Bamtools","text":"Tidy wgsmetrics file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$tidy_wgsmetrics(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-parse-flagstats-","dir":"Reference","previous_headings":"","what":"Method parse_flagstats()","title":"Bamtools Object — Bamtools","text":"Read flag_counts.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$parse_flagstats(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-tidy-flagstats-","dir":"Reference","previous_headings":"","what":"Method tidy_flagstats()","title":"Bamtools Object — Bamtools","text":"Tidy flag_counts.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$tidy_flagstats(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-parse-coverage-","dir":"Reference","previous_headings":"","what":"Method parse_coverage()","title":"Bamtools Object — Bamtools","text":"Read coverage.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$parse_coverage(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-tidy-coverage-","dir":"Reference","previous_headings":"","what":"Method tidy_coverage()","title":"Bamtools Object — Bamtools","text":"Tidy coverage.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$tidy_coverage(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-parse-fraglength-","dir":"Reference","previous_headings":"","what":"Method parse_fraglength()","title":"Bamtools Object — Bamtools","text":"Read frag_length.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$parse_fraglength(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-tidy-fraglength-","dir":"Reference","previous_headings":"","what":"Method tidy_fraglength()","title":"Bamtools Object — Bamtools","text":"Tidy frag_length.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$tidy_fraglength(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-parse-partitionstats-","dir":"Reference","previous_headings":"","what":"Method parse_partitionstats()","title":"Bamtools Object — Bamtools","text":"Read partition_stats.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$parse_partitionstats(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-tidy-partitionstats-","dir":"Reference","previous_headings":"","what":"Method tidy_partitionstats()","title":"Bamtools Object — Bamtools","text":"Tidy partition_stats.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$tidy_partitionstats(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Bamtools Object — Bamtools","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Bamtools Object — Bamtools","text":"","code":"Bamtools$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bamtools Object — Bamtools","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Bamtools.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bamtools Object — Bamtools","text":"","code":"cls <- Bamtools indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"bamtools_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) #> NULL list.files(odir, pattern = \"parquet\", full.names = FALSE) #> [1] \"sample1_amber_bafpcf.parquet\"           #> [2] \"sample1_amber_contaminationtsv.parquet\" #> [3] \"sample1_amber_homozygousregion.parquet\" #> [4] \"sample1_amber_qc.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":null,"dir":"Reference","previous_headings":"","what":"Chord Object — Chord","title":"Chord Object — Chord","text":"Chord file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Chord Object — Chord","text":"tidywigits::Tool -> Chord","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Chord Object — Chord","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Chord Object — Chord","text":"Chord$new() Chord$parse_prediction() Chord$tidy_prediction() Chord$parse_signatures() Chord$tidy_signatures() Chord$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Chord Object — Chord","text":"Create new Chord object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chord Object — Chord","text":"","code":"Chord$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chord Object — Chord","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"method-parse-prediction-","dir":"Reference","previous_headings":"","what":"Method parse_prediction()","title":"Chord Object — Chord","text":"Read prediction.txt file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Chord Object — Chord","text":"","code":"Chord$parse_prediction(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chord Object — Chord","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"method-tidy-prediction-","dir":"Reference","previous_headings":"","what":"Method tidy_prediction()","title":"Chord Object — Chord","text":"Tidy prediction.txt file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Chord Object — Chord","text":"","code":"Chord$tidy_prediction(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chord Object — Chord","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"method-parse-signatures-","dir":"Reference","previous_headings":"","what":"Method parse_signatures()","title":"Chord Object — Chord","text":"Read signatures.txt file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Chord Object — Chord","text":"","code":"Chord$parse_signatures(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chord Object — Chord","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"method-tidy-signatures-","dir":"Reference","previous_headings":"","what":"Method tidy_signatures()","title":"Chord Object — Chord","text":"Tidy signatures.txt file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Chord Object — Chord","text":"","code":"Chord$tidy_signatures(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chord Object — Chord","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Chord Object — Chord","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Chord Object — Chord","text":"","code":"Chord$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chord Object — Chord","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Chord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chord Object — Chord","text":"","code":"cls <- Chord indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"chord_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #> [1] \"sample1_amber_bafpcf.parquet\"           #> [2] \"sample1_amber_contaminationtsv.parquet\" #> [3] \"sample1_amber_homozygousregion.parquet\" #> [4] \"sample1_amber_qc.parquet\"               #> [5] \"sample1_chord_prediction.parquet\"       #> [6] \"sample1_chord_signatures.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":null,"dir":"Reference","previous_headings":"","what":"Cobalt Object — Cobalt","title":"Cobalt Object — Cobalt","text":"Cobalt file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Cobalt Object — Cobalt","text":"tidywigits::Tool -> Cobalt","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Cobalt Object — Cobalt","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cobalt Object — Cobalt","text":"Cobalt$new() Cobalt$parse_gcmed() Cobalt$tidy_gcmed() Cobalt$parse_ratiomed() Cobalt$tidy_ratiomed() Cobalt$parse_ratiotsv() Cobalt$tidy_ratiotsv() Cobalt$parse_ratiopcf() Cobalt$tidy_ratiopcf() Cobalt$parse_version() Cobalt$tidy_version() Cobalt$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Cobalt Object — Cobalt","text":"Create new Cobalt object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-parse-gcmed-","dir":"Reference","previous_headings":"","what":"Method parse_gcmed()","title":"Cobalt Object — Cobalt","text":"Read gc.median.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$parse_gcmed(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-tidy-gcmed-","dir":"Reference","previous_headings":"","what":"Method tidy_gcmed()","title":"Cobalt Object — Cobalt","text":"Tidy gc.median.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$tidy_gcmed(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-parse-ratiomed-","dir":"Reference","previous_headings":"","what":"Method parse_ratiomed()","title":"Cobalt Object — Cobalt","text":"Read ratio.median.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$parse_ratiomed(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-tidy-ratiomed-","dir":"Reference","previous_headings":"","what":"Method tidy_ratiomed()","title":"Cobalt Object — Cobalt","text":"Tidy ratio.median.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$tidy_ratiomed(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-parse-ratiotsv-","dir":"Reference","previous_headings":"","what":"Method parse_ratiotsv()","title":"Cobalt Object — Cobalt","text":"Read ratio.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$parse_ratiotsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-tidy-ratiotsv-","dir":"Reference","previous_headings":"","what":"Method tidy_ratiotsv()","title":"Cobalt Object — Cobalt","text":"Tidy ratio.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$tidy_ratiotsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-parse-ratiopcf-","dir":"Reference","previous_headings":"","what":"Method parse_ratiopcf()","title":"Cobalt Object — Cobalt","text":"Read ratio.pcf file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$parse_ratiopcf(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-tidy-ratiopcf-","dir":"Reference","previous_headings":"","what":"Method tidy_ratiopcf()","title":"Cobalt Object — Cobalt","text":"Tidy ratio.pcf file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$tidy_ratiopcf(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-parse-version-","dir":"Reference","previous_headings":"","what":"Method parse_version()","title":"Cobalt Object — Cobalt","text":"Read cobalt.version file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$parse_version(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-tidy-version-","dir":"Reference","previous_headings":"","what":"Method tidy_version()","title":"Cobalt Object — Cobalt","text":"Tidy cobalt.version file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$tidy_version(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cobalt Object — Cobalt","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Cobalt Object — Cobalt","text":"","code":"Cobalt$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cobalt Object — Cobalt","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cobalt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cobalt Object — Cobalt","text":"","code":"cls <- Cobalt indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"cobalt_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_amber_bafpcf.parquet\"              #>  [2] \"sample1_amber_contaminationtsv.parquet\"    #>  [3] \"sample1_amber_homozygousregion.parquet\"    #>  [4] \"sample1_amber_qc.parquet\"                  #>  [5] \"sample1_chord_prediction.parquet\"          #>  [6] \"sample1_chord_signatures.parquet\"          #>  [7] \"sample1_cobalt_gcmed_bucket_stats.parquet\" #>  [8] \"sample1_cobalt_gcmed_sample_stats.parquet\" #>  [9] \"sample1_cobalt_ratiomed.parquet\"           #> [10] \"sample1_cobalt_ratiopcf.parquet\"           #> [11] \"version_cobalt_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":null,"dir":"Reference","previous_headings":"","what":"Config Object — Config","title":"Config Object — Config","text":"Config YAML file parsing.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Config Object — Config","text":"tool (character(1)) Tool name. config (list()) Config list. raw_schemas_all (tibble()) raw schemas tool. tidy_schemas_all (tibble()) tidy schemas tool.","code":""},{"path":[]},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Config Object — Config","text":"Config$new() Config$print() Config$read() Config$get_raw_patterns() Config$get_raw_versions() Config$get_raw_descriptions() Config$get_raw_schemas_all() Config$get_raw_schema() Config$are_raw_schemas_valid() Config$get_tidy_descriptions() Config$get_tidy_schemas_all() Config$get_tidy_schema() Config$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Config Object — Config","text":"Create new Config object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$new(tool)"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config Object — Config","text":"tool (character(1)) Tool name.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Config Object — Config","text":"Print details Tool.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$print(...)"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config Object — Config","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-read-","dir":"Reference","previous_headings":"","what":"Method read()","title":"Config Object — Config","text":"Read YAML configs.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$read(pkg = \"tidywigits\")"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config Object — Config","text":"pkg (character(1)) Package name config files located.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Config Object — Config","text":"list() parsed data.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-get-raw-patterns-","dir":"Reference","previous_headings":"","what":"Method get_raw_patterns()","title":"Config Object — Config","text":"Return output file patterns.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$get_raw_patterns()"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-get-raw-versions-","dir":"Reference","previous_headings":"","what":"Method get_raw_versions()","title":"Config Object — Config","text":"Return output file schema versions.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$get_raw_versions()"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-get-raw-descriptions-","dir":"Reference","previous_headings":"","what":"Method get_raw_descriptions()","title":"Config Object — Config","text":"Return output file descriptions.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$get_raw_descriptions()"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-get-raw-schemas-all-","dir":"Reference","previous_headings":"","what":"Method get_raw_schemas_all()","title":"Config Object — Config","text":"Return output file schemas.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$get_raw_schemas_all()"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-get-raw-schema-","dir":"Reference","previous_headings":"","what":"Method get_raw_schema()","title":"Config Object — Config","text":"Get raw file schema.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$get_raw_schema(x, v = \"latest\")"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config Object — Config","text":"x (character(1)) Raw file name. v (character(1)) Version (def: latest).","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-are-raw-schemas-valid-","dir":"Reference","previous_headings":"","what":"Method are_raw_schemas_valid()","title":"Config Object — Config","text":"Validate schema.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$are_raw_schemas_valid()"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-get-tidy-descriptions-","dir":"Reference","previous_headings":"","what":"Method get_tidy_descriptions()","title":"Config Object — Config","text":"Return tidy tibble descriptions.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$get_tidy_descriptions()"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-get-tidy-schemas-all-","dir":"Reference","previous_headings":"","what":"Method get_tidy_schemas_all()","title":"Config Object — Config","text":"Return tidy tibble schemas.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$get_tidy_schemas_all()"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-get-tidy-schema-","dir":"Reference","previous_headings":"","what":"Method get_tidy_schema()","title":"Config Object — Config","text":"Get tidy tbl schema.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$get_tidy_schema(x, v = \"latest\", subtbl = \"tbl1\")"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config Object — Config","text":"x (character(1)) Tidy tbl name. v (character(1)) Version schema (def: latest). subtbl (character(1)) Subtbl use (def: tbl1).","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Config Object — Config","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Config Object — Config","text":"","code":"Config$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Config Object — Config","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Config Object — Config","text":"","code":"tool <- \"isofox\" conf <- Config$new(tool) conf$get_raw_patterns() #> # A tibble: 8 × 2 #>   name           value                             #>   <chr>          <chr>                             #> 1 summary        \"\\\\.isf\\\\.summary\\\\.csv$\"         #> 2 genedata       \"\\\\.isf\\\\.gene_data\\\\.csv$\"       #> 3 transdata      \"\\\\.isf\\\\.transcript_data\\\\.csv$\" #> 4 altsj          \"\\\\.isf\\\\.alt_splice_junc\\\\.csv$\" #> 5 retintron      \"\\\\.isf\\\\.retained_intron\\\\.csv$\" #> 6 fusionsall     \"\\\\.isf\\\\.fusions\\\\.csv$\"         #> 7 fusionspass    \"\\\\.isf\\\\.pass_fusions\\\\.csv$\"    #> 8 genecollection \"\\\\.isf\\\\.gene_collection\\\\.csv$\" conf$get_raw_versions() #> # A tibble: 8 × 2 #>   name           value  #>   <chr>          <chr>  #> 1 summary        latest #> 2 genedata       latest #> 3 transdata      latest #> 4 altsj          latest #> 5 retintron      latest #> 6 fusionsall     latest #> 7 fusionspass    latest #> 8 genecollection latest conf$get_raw_descriptions() #> # A tibble: 8 × 2 #>   name           value                       #>   <chr>          <chr>                       #> 1 summary        QC summary.                 #> 2 genedata       Gene level data.            #> 3 transdata      Transcript level data.      #> 4 altsj          Alternate splice junctions. #> 5 retintron      Retained introns.           #> 6 fusionsall     All fusions.                #> 7 fusionspass    Passed fusions.             #> 8 genecollection Gene collection.            conf$get_raw_schemas_all() #> # A tibble: 8 × 3 #>   name           version schema            #>   <chr>          <chr>   <list>            #> 1 summary        latest  <tibble [16 × 2]> #> 2 genedata       latest  <tibble [13 × 2]> #> 3 transdata      latest  <tibble [18 × 2]> #> 4 altsj          latest  <tibble [18 × 2]> #> 5 retintron      latest  <tibble [10 × 2]> #> 6 fusionsall     latest  <tibble [31 × 2]> #> 7 fusionspass    latest  <tibble [29 × 2]> #> 8 genecollection latest  <tibble [15 × 2]> conf$get_raw_schema(\"summary\") #> # A tibble: 16 × 2 #>    field                 type  #>    <chr>                 <chr> #>  1 SampleId              c     #>  2 QcStatus              c     #>  3 TotalFragments        d     #>  4 DuplicateFragments    d     #>  5 SplicedFragmentPerc   d     #>  6 UnsplicedFragmentPerc d     #>  7 AltFragmentPerc       d     #>  8 ChimericFragmentPerc  d     #>  9 SplicedGeneCount      d     #> 10 ReadLength            d     #> 11 FragLength5th         d     #> 12 FragLength50th        d     #> 13 FragLength95th        d     #> 14 EnrichedGenePercent   d     #> 15 MedianGCRatio         d     #> 16 ForwardStrandPercent  d     conf$are_raw_schemas_valid() #> [1] TRUE conf$get_tidy_descriptions() #> # A tibble: 8 × 2 #>   name           value                       #>   <chr>          <chr>                       #> 1 summary        QC summary.                 #> 2 genedata       Gene level data.            #> 3 transdata      Transcript level data.      #> 4 altsj          Alternate splice junctions. #> 5 retintron      Retained introns.           #> 6 fusionsall     All fusions.                #> 7 fusionspass    Passed fusions.             #> 8 genecollection Gene collection.            conf$get_tidy_schemas_all() #> # A tibble: 8 × 4 #>   name           version tbl   schema            #>   <chr>          <chr>   <chr> <list>            #> 1 summary        latest  tbl1  <tibble [16 × 3]> #> 2 genedata       latest  tbl1  <tibble [13 × 3]> #> 3 transdata      latest  tbl1  <tibble [18 × 3]> #> 4 altsj          latest  tbl1  <tibble [18 × 3]> #> 5 retintron      latest  tbl1  <tibble [10 × 3]> #> 6 fusionsall     latest  tbl1  <tibble [31 × 3]> #> 7 fusionspass    latest  tbl1  <tibble [29 × 3]> #> 8 genecollection latest  tbl1  <tibble [15 × 3]> conf$get_tidy_schema(\"summary\") #> # A tibble: 16 × 3 #>    field              type  description                                          #>    <chr>              <chr> <chr>                                                #>  1 sample_id          c     \"sample ID\"                                          #>  2 qc_status          c     \"QC status\"                                          #>  3 frag_tot           d     \"total fragments\"                                    #>  4 frag_dup           d     \"duplicate marked fragments\"                         #>  5 frag_spliced_pct   d     \"fragment % supporting 1 or more known transcripts\"  #>  6 frag_unspliced_pct d     \"fragment % not containing a splice junction and no… #>  7 frag_alt_pct       d     \"fragment % supporting an alternate splice junction… #>  8 frag_chimeric_pct  d     \"fragment % supporting a chimeric junction\"          #>  9 spliced_gene_count d     \"count of spliced genes\"                             #> 10 read_length        d     \"raw read length of fragments\"                       #> 11 frag_length_5th    d     \"5th percentile of genic intronic fragment lengths\"  #> 12 frag_length_50th   d     \"50th percentile of genic intronic fragment lengths\" #> 13 frag_length_95th   d     \"95th percentile of genic intronic fragment lengths\" #> 14 enriched_gene_pct  d     \"fragment % supporting one of the following 6 genes… #> 15 median_gc_ratio    d     \"median GC ratio excluding the 6 highly enriched ge… #> 16 forward_strand_pct d     \"\""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":null,"dir":"Reference","previous_headings":"","what":"Cuppa Object — Cuppa","title":"Cuppa Object — Cuppa","text":"Cuppa file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Cuppa Object — Cuppa","text":"tidywigits::Tool -> Cuppa","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Cuppa Object — Cuppa","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Cuppa Object — Cuppa","text":"Cuppa$new() Cuppa$parse_datacsv() Cuppa$tidy_datacsv() Cuppa$parse_feat() Cuppa$tidy_feat() Cuppa$parse_predsum() Cuppa$tidy_predsum() Cuppa$parse_datatsv() Cuppa$tidy_datatsv() Cuppa$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Cuppa Object — Cuppa","text":"Create new Cuppa object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuppa Object — Cuppa","text":"","code":"Cuppa$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuppa Object — Cuppa","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"method-parse-datacsv-","dir":"Reference","previous_headings":"","what":"Method parse_datacsv()","title":"Cuppa Object — Cuppa","text":"Read cup.data.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuppa Object — Cuppa","text":"","code":"Cuppa$parse_datacsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuppa Object — Cuppa","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"method-tidy-datacsv-","dir":"Reference","previous_headings":"","what":"Method tidy_datacsv()","title":"Cuppa Object — Cuppa","text":"Tidy cup.data.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuppa Object — Cuppa","text":"","code":"Cuppa$tidy_datacsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuppa Object — Cuppa","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"method-parse-feat-","dir":"Reference","previous_headings":"","what":"Method parse_feat()","title":"Cuppa Object — Cuppa","text":"Read cuppa_data.tsv.gz file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuppa Object — Cuppa","text":"","code":"Cuppa$parse_feat(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuppa Object — Cuppa","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"method-tidy-feat-","dir":"Reference","previous_headings":"","what":"Method tidy_feat()","title":"Cuppa Object — Cuppa","text":"Tidy cuppa_data.tsv.gz file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuppa Object — Cuppa","text":"","code":"Cuppa$tidy_feat(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuppa Object — Cuppa","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"method-parse-predsum-","dir":"Reference","previous_headings":"","what":"Method parse_predsum()","title":"Cuppa Object — Cuppa","text":"Read cuppa.pred_summ.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuppa Object — Cuppa","text":"","code":"Cuppa$parse_predsum(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuppa Object — Cuppa","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"method-tidy-predsum-","dir":"Reference","previous_headings":"","what":"Method tidy_predsum()","title":"Cuppa Object — Cuppa","text":"Tidy cuppa.pred_summ.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuppa Object — Cuppa","text":"","code":"Cuppa$tidy_predsum(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuppa Object — Cuppa","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"method-parse-datatsv-","dir":"Reference","previous_headings":"","what":"Method parse_datatsv()","title":"Cuppa Object — Cuppa","text":"Read cuppa.vis_data.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuppa Object — Cuppa","text":"","code":"Cuppa$parse_datatsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuppa Object — Cuppa","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"method-tidy-datatsv-","dir":"Reference","previous_headings":"","what":"Method tidy_datatsv()","title":"Cuppa Object — Cuppa","text":"Tidy cuppa.vis_data.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuppa Object — Cuppa","text":"","code":"Cuppa$tidy_datatsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuppa Object — Cuppa","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Cuppa Object — Cuppa","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Cuppa Object — Cuppa","text":"","code":"Cuppa$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cuppa Object — Cuppa","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Cuppa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cuppa Object — Cuppa","text":"","code":"cls <- Cuppa indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"cuppa_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_amber_bafpcf.parquet\"              #>  [2] \"sample1_amber_contaminationtsv.parquet\"    #>  [3] \"sample1_amber_homozygousregion.parquet\"    #>  [4] \"sample1_amber_qc.parquet\"                  #>  [5] \"sample1_chord_prediction.parquet\"          #>  [6] \"sample1_chord_signatures.parquet\"          #>  [7] \"sample1_cobalt_gcmed_bucket_stats.parquet\" #>  [8] \"sample1_cobalt_gcmed_sample_stats.parquet\" #>  [9] \"sample1_cobalt_ratiomed.parquet\"           #> [10] \"sample1_cobalt_ratiopcf.parquet\"           #> [11] \"sample1_cuppa_datatsv.parquet\"             #> [12] \"sample1_cuppa_feat.parquet\"                #> [13] \"sample1_cuppa_predsum.parquet\"             #> [14] \"version_cobalt_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":null,"dir":"Reference","previous_headings":"","what":"Esvee Object — Esvee","title":"Esvee Object — Esvee","text":"Esvee file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Esvee Object — Esvee","text":"tidywigits::Tool -> Esvee","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Esvee Object — Esvee","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Esvee Object — Esvee","text":"Esvee$new() Esvee$parse_prepfraglen() Esvee$tidy_prepfraglen() Esvee$parse_prepdiscstats() Esvee$tidy_prepdiscstats() Esvee$parse_prepjunction() Esvee$tidy_prepjunction() Esvee$parse_assemblephased() Esvee$tidy_assemblephased() Esvee$parse_assembleassembly() Esvee$tidy_assembleassembly() Esvee$parse_assemblebreakend() Esvee$tidy_assemblebreakend() Esvee$parse_assemblealignment() Esvee$tidy_assemblealignment() Esvee$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Esvee Object — Esvee","text":"Create new Esvee object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-parse-prepfraglen-","dir":"Reference","previous_headings":"","what":"Method parse_prepfraglen()","title":"Esvee Object — Esvee","text":"Read prep.fragment_length.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$parse_prepfraglen(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-tidy-prepfraglen-","dir":"Reference","previous_headings":"","what":"Method tidy_prepfraglen()","title":"Esvee Object — Esvee","text":"Tidy prep.fragment_length.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$tidy_prepfraglen(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-parse-prepdiscstats-","dir":"Reference","previous_headings":"","what":"Method parse_prepdiscstats()","title":"Esvee Object — Esvee","text":"Read prep.disc_stats.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$parse_prepdiscstats(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-tidy-prepdiscstats-","dir":"Reference","previous_headings":"","what":"Method tidy_prepdiscstats()","title":"Esvee Object — Esvee","text":"Tidy prep.disc_stats.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$tidy_prepdiscstats(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-parse-prepjunction-","dir":"Reference","previous_headings":"","what":"Method parse_prepjunction()","title":"Esvee Object — Esvee","text":"Read prep.junction.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$parse_prepjunction(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-tidy-prepjunction-","dir":"Reference","previous_headings":"","what":"Method tidy_prepjunction()","title":"Esvee Object — Esvee","text":"Tidy prep.junction.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$tidy_prepjunction(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-parse-assemblephased-","dir":"Reference","previous_headings":"","what":"Method parse_assemblephased()","title":"Esvee Object — Esvee","text":"Read esvee.phased_assembly.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$parse_assemblephased(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-tidy-assemblephased-","dir":"Reference","previous_headings":"","what":"Method tidy_assemblephased()","title":"Esvee Object — Esvee","text":"Tidy esvee.phased_assembly.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$tidy_assemblephased(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-parse-assembleassembly-","dir":"Reference","previous_headings":"","what":"Method parse_assembleassembly()","title":"Esvee Object — Esvee","text":"Read esvee.assembly.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$parse_assembleassembly(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-tidy-assembleassembly-","dir":"Reference","previous_headings":"","what":"Method tidy_assembleassembly()","title":"Esvee Object — Esvee","text":"Tidy esvee.assembly.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$tidy_assembleassembly(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-parse-assemblebreakend-","dir":"Reference","previous_headings":"","what":"Method parse_assemblebreakend()","title":"Esvee Object — Esvee","text":"Read breakend.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$parse_assemblebreakend(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-tidy-assemblebreakend-","dir":"Reference","previous_headings":"","what":"Method tidy_assemblebreakend()","title":"Esvee Object — Esvee","text":"Tidy breakend.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$tidy_assemblebreakend(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-parse-assemblealignment-","dir":"Reference","previous_headings":"","what":"Method parse_assemblealignment()","title":"Esvee Object — Esvee","text":"Read alignment.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$parse_assemblealignment(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-tidy-assemblealignment-","dir":"Reference","previous_headings":"","what":"Method tidy_assemblealignment()","title":"Esvee Object — Esvee","text":"Tidy alignment.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$tidy_assemblealignment(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Esvee Object — Esvee","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Esvee Object — Esvee","text":"","code":"Esvee$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Esvee Object — Esvee","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Esvee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Esvee Object — Esvee","text":"","code":"cls <- Esvee indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"esvee_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) #> NULL list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_amber_bafpcf.parquet\"              #>  [2] \"sample1_amber_contaminationtsv.parquet\"    #>  [3] \"sample1_amber_homozygousregion.parquet\"    #>  [4] \"sample1_amber_qc.parquet\"                  #>  [5] \"sample1_chord_prediction.parquet\"          #>  [6] \"sample1_chord_signatures.parquet\"          #>  [7] \"sample1_cobalt_gcmed_bucket_stats.parquet\" #>  [8] \"sample1_cobalt_gcmed_sample_stats.parquet\" #>  [9] \"sample1_cobalt_ratiomed.parquet\"           #> [10] \"sample1_cobalt_ratiopcf.parquet\"           #> [11] \"sample1_cuppa_datatsv.parquet\"             #> [12] \"sample1_cuppa_feat.parquet\"                #> [13] \"sample1_cuppa_predsum.parquet\"             #> [14] \"version_cobalt_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Flagstats Object — Flagstats","title":"Flagstats Object — Flagstats","text":"Flagstats file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Flagstats Object — Flagstats","text":"tidywigits::Tool -> Flagstats","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Flagstats Object — Flagstats","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Flagstats Object — Flagstats","text":"Flagstats$new() Flagstats$parse_flagstats() Flagstats$tidy_flagstats() Flagstats$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Flagstats Object — Flagstats","text":"Create new Flagstats object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flagstats Object — Flagstats","text":"","code":"Flagstats$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flagstats Object — Flagstats","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"method-parse-flagstats-","dir":"Reference","previous_headings":"","what":"Method parse_flagstats()","title":"Flagstats Object — Flagstats","text":"Read flagstat file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Flagstats Object — Flagstats","text":"","code":"Flagstats$parse_flagstats(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flagstats Object — Flagstats","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"method-tidy-flagstats-","dir":"Reference","previous_headings":"","what":"Method tidy_flagstats()","title":"Flagstats Object — Flagstats","text":"Tidy flagstat file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Flagstats Object — Flagstats","text":"","code":"Flagstats$tidy_flagstats(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flagstats Object — Flagstats","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Flagstats Object — Flagstats","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Flagstats Object — Flagstats","text":"","code":"Flagstats$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flagstats Object — Flagstats","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Flagstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flagstats Object — Flagstats","text":"","code":"cls <- Flagstats indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"flagstats_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) #> NULL list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_amber_bafpcf.parquet\"              #>  [2] \"sample1_amber_contaminationtsv.parquet\"    #>  [3] \"sample1_amber_homozygousregion.parquet\"    #>  [4] \"sample1_amber_qc.parquet\"                  #>  [5] \"sample1_chord_prediction.parquet\"          #>  [6] \"sample1_chord_signatures.parquet\"          #>  [7] \"sample1_cobalt_gcmed_bucket_stats.parquet\" #>  [8] \"sample1_cobalt_gcmed_sample_stats.parquet\" #>  [9] \"sample1_cobalt_ratiomed.parquet\"           #> [10] \"sample1_cobalt_ratiopcf.parquet\"           #> [11] \"sample1_cuppa_datatsv.parquet\"             #> [12] \"sample1_cuppa_feat.parquet\"                #> [13] \"sample1_cuppa_predsum.parquet\"             #> [14] \"version_cobalt_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":null,"dir":"Reference","previous_headings":"","what":"Isofox Object — Isofox","title":"Isofox Object — Isofox","text":"Isofox file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Isofox Object — Isofox","text":"tidywigits::Tool -> Isofox","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Isofox Object — Isofox","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Isofox Object — Isofox","text":"Isofox$new() Isofox$parse_summary() Isofox$tidy_summary() Isofox$parse_genedata() Isofox$tidy_genedata() Isofox$parse_transdata() Isofox$tidy_transdata() Isofox$parse_altsj() Isofox$tidy_altsj() Isofox$parse_retintron() Isofox$tidy_retintron() Isofox$parse_fusionsall() Isofox$tidy_fusionsall() Isofox$parse_fusionspass() Isofox$tidy_fusionspass() Isofox$parse_genecollection() Isofox$tidy_genecollection() Isofox$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Isofox Object — Isofox","text":"Create new Isofox object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-parse-summary-","dir":"Reference","previous_headings":"","what":"Method parse_summary()","title":"Isofox Object — Isofox","text":"Read summary.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$parse_summary(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-tidy-summary-","dir":"Reference","previous_headings":"","what":"Method tidy_summary()","title":"Isofox Object — Isofox","text":"Tidy summary.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$tidy_summary(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-parse-genedata-","dir":"Reference","previous_headings":"","what":"Method parse_genedata()","title":"Isofox Object — Isofox","text":"Read gene_data.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$parse_genedata(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-tidy-genedata-","dir":"Reference","previous_headings":"","what":"Method tidy_genedata()","title":"Isofox Object — Isofox","text":"Tidy gene_data.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$tidy_genedata(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-parse-transdata-","dir":"Reference","previous_headings":"","what":"Method parse_transdata()","title":"Isofox Object — Isofox","text":"Read transcript_data.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$parse_transdata(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-tidy-transdata-","dir":"Reference","previous_headings":"","what":"Method tidy_transdata()","title":"Isofox Object — Isofox","text":"Tidy transcript_data.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$tidy_transdata(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-parse-altsj-","dir":"Reference","previous_headings":"","what":"Method parse_altsj()","title":"Isofox Object — Isofox","text":"Read alt_splice_junc.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$parse_altsj(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-tidy-altsj-","dir":"Reference","previous_headings":"","what":"Method tidy_altsj()","title":"Isofox Object — Isofox","text":"Tidy alt_splice_junc.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$tidy_altsj(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-parse-retintron-","dir":"Reference","previous_headings":"","what":"Method parse_retintron()","title":"Isofox Object — Isofox","text":"Read retained_intron.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$parse_retintron(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-tidy-retintron-","dir":"Reference","previous_headings":"","what":"Method tidy_retintron()","title":"Isofox Object — Isofox","text":"Tidy retained_intron.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$tidy_retintron(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-parse-fusionsall-","dir":"Reference","previous_headings":"","what":"Method parse_fusionsall()","title":"Isofox Object — Isofox","text":"Read fusions.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$parse_fusionsall(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-tidy-fusionsall-","dir":"Reference","previous_headings":"","what":"Method tidy_fusionsall()","title":"Isofox Object — Isofox","text":"Tidy fusions.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$tidy_fusionsall(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-parse-fusionspass-","dir":"Reference","previous_headings":"","what":"Method parse_fusionspass()","title":"Isofox Object — Isofox","text":"Read pass_fusions.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$parse_fusionspass(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-tidy-fusionspass-","dir":"Reference","previous_headings":"","what":"Method tidy_fusionspass()","title":"Isofox Object — Isofox","text":"Tidy pass_fusions.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$tidy_fusionspass(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-parse-genecollection-","dir":"Reference","previous_headings":"","what":"Method parse_genecollection()","title":"Isofox Object — Isofox","text":"Read gene_collection.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$parse_genecollection(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-tidy-genecollection-","dir":"Reference","previous_headings":"","what":"Method tidy_genecollection()","title":"Isofox Object — Isofox","text":"Tidy gene_collection.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$tidy_genecollection(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Isofox Object — Isofox","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Isofox Object — Isofox","text":"","code":"Isofox$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isofox Object — Isofox","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Isofox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Isofox Object — Isofox","text":"","code":"cls <- Isofox indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"isofox_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) #> NULL list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_amber_bafpcf.parquet\"              #>  [2] \"sample1_amber_contaminationtsv.parquet\"    #>  [3] \"sample1_amber_homozygousregion.parquet\"    #>  [4] \"sample1_amber_qc.parquet\"                  #>  [5] \"sample1_chord_prediction.parquet\"          #>  [6] \"sample1_chord_signatures.parquet\"          #>  [7] \"sample1_cobalt_gcmed_bucket_stats.parquet\" #>  [8] \"sample1_cobalt_gcmed_sample_stats.parquet\" #>  [9] \"sample1_cobalt_ratiomed.parquet\"           #> [10] \"sample1_cobalt_ratiopcf.parquet\"           #> [11] \"sample1_cuppa_datatsv.parquet\"             #> [12] \"sample1_cuppa_feat.parquet\"                #> [13] \"sample1_cuppa_predsum.parquet\"             #> [14] \"version_cobalt_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":null,"dir":"Reference","previous_headings":"","what":"Lilac Object — Lilac","title":"Lilac Object — Lilac","text":"Lilac file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Lilac Object — Lilac","text":"tidywigits::Tool -> Lilac","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Lilac Object — Lilac","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Lilac Object — Lilac","text":"Lilac$new() Lilac$parse_summary() Lilac$tidy_summary() Lilac$parse_qc() Lilac$tidy_qc() Lilac$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Lilac Object — Lilac","text":"Create new Lilac object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lilac Object — Lilac","text":"","code":"Lilac$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lilac Object — Lilac","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"method-parse-summary-","dir":"Reference","previous_headings":"","what":"Method parse_summary()","title":"Lilac Object — Lilac","text":"Read lilac.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Lilac Object — Lilac","text":"","code":"Lilac$parse_summary(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lilac Object — Lilac","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"method-tidy-summary-","dir":"Reference","previous_headings":"","what":"Method tidy_summary()","title":"Lilac Object — Lilac","text":"Tidy lilac.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Lilac Object — Lilac","text":"","code":"Lilac$tidy_summary(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lilac Object — Lilac","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"method-parse-qc-","dir":"Reference","previous_headings":"","what":"Method parse_qc()","title":"Lilac Object — Lilac","text":"Read lilac.qc.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Lilac Object — Lilac","text":"","code":"Lilac$parse_qc(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lilac Object — Lilac","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"method-tidy-qc-","dir":"Reference","previous_headings":"","what":"Method tidy_qc()","title":"Lilac Object — Lilac","text":"Tidy lilac.qc.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Lilac Object — Lilac","text":"","code":"Lilac$tidy_qc(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lilac Object — Lilac","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Lilac Object — Lilac","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Lilac Object — Lilac","text":"","code":"Lilac$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lilac Object — Lilac","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Lilac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lilac Object — Lilac","text":"","code":"cls <- Lilac indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"lilac_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_amber_bafpcf.parquet\"              #>  [2] \"sample1_amber_contaminationtsv.parquet\"    #>  [3] \"sample1_amber_homozygousregion.parquet\"    #>  [4] \"sample1_amber_qc.parquet\"                  #>  [5] \"sample1_chord_prediction.parquet\"          #>  [6] \"sample1_chord_signatures.parquet\"          #>  [7] \"sample1_cobalt_gcmed_bucket_stats.parquet\" #>  [8] \"sample1_cobalt_gcmed_sample_stats.parquet\" #>  [9] \"sample1_cobalt_ratiomed.parquet\"           #> [10] \"sample1_cobalt_ratiopcf.parquet\"           #> [11] \"sample1_cuppa_datatsv.parquet\"             #> [12] \"sample1_cuppa_feat.parquet\"                #> [13] \"sample1_cuppa_predsum.parquet\"             #> [14] \"sample1_lilac_qc.parquet\"                  #> [15] \"sample1_lilac_summary.parquet\"             #> [16] \"version_cobalt_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":null,"dir":"Reference","previous_headings":"","what":"Linx Object — Linx","title":"Linx Object — Linx","text":"Linx file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Linx Object — Linx","text":"tidywigits::Tool -> Linx","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Linx Object — Linx","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Linx Object — Linx","text":"Linx$new() Linx$list_files() Linx$parse_breakends() Linx$tidy_breakends() Linx$parse_clusters() Linx$tidy_clusters() Linx$parse_drivercatalog() Linx$tidy_drivercatalog() Linx$parse_drivers() Linx$tidy_drivers() Linx$parse_fusions() Linx$tidy_fusions() Linx$parse_links() Linx$tidy_links() Linx$parse_neoepitope() Linx$tidy_neoepitope() Linx$parse_svs() Linx$tidy_svs() Linx$parse_viscn() Linx$tidy_viscn() Linx$parse_visfusion() Linx$tidy_visfusion() Linx$parse_visgeneexon() Linx$tidy_visgeneexon() Linx$parse_visproteindomain() Linx$tidy_visproteindomain() Linx$parse_vissegments() Linx$tidy_vissegments() Linx$parse_vissvdata() Linx$tidy_vissvdata() Linx$parse_version() Linx$tidy_version() Linx$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Linx Object — Linx","text":"Create new Linx object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-list-files-","dir":"Reference","previous_headings":"","what":"Method list_files()","title":"Linx Object — Linx","text":"List files given linx directory. Overwrites parent class handle germline LINX files.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$list_files(type = \"file\")"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"type (character(1)) File type(s) return (e.g. , file, directory, symlink). See fs::dir_info.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Linx Object — Linx","text":"tibble file paths.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-breakends-","dir":"Reference","previous_headings":"","what":"Method parse_breakends()","title":"Linx Object — Linx","text":"Read breakend.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_breakends(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-breakends-","dir":"Reference","previous_headings":"","what":"Method tidy_breakends()","title":"Linx Object — Linx","text":"Tidy breakend.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_breakends(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-clusters-","dir":"Reference","previous_headings":"","what":"Method parse_clusters()","title":"Linx Object — Linx","text":"Read clusters.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_clusters(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-clusters-","dir":"Reference","previous_headings":"","what":"Method tidy_clusters()","title":"Linx Object — Linx","text":"Tidy clusters.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_clusters(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-drivercatalog-","dir":"Reference","previous_headings":"","what":"Method parse_drivercatalog()","title":"Linx Object — Linx","text":"Read linx.driver.catalog.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_drivercatalog(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-drivercatalog-","dir":"Reference","previous_headings":"","what":"Method tidy_drivercatalog()","title":"Linx Object — Linx","text":"Tidy linx.driver.catalog.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_drivercatalog(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-drivers-","dir":"Reference","previous_headings":"","what":"Method parse_drivers()","title":"Linx Object — Linx","text":"Read linx.drivers.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_drivers(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-drivers-","dir":"Reference","previous_headings":"","what":"Method tidy_drivers()","title":"Linx Object — Linx","text":"Tidy linx.drivers.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_drivers(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-fusions-","dir":"Reference","previous_headings":"","what":"Method parse_fusions()","title":"Linx Object — Linx","text":"Read linx.fusion.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_fusions(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-fusions-","dir":"Reference","previous_headings":"","what":"Method tidy_fusions()","title":"Linx Object — Linx","text":"Tidy linx.fusion.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_fusions(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-links-","dir":"Reference","previous_headings":"","what":"Method parse_links()","title":"Linx Object — Linx","text":"Read links.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_links(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-links-","dir":"Reference","previous_headings":"","what":"Method tidy_links()","title":"Linx Object — Linx","text":"Tidy links.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_links(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-neoepitope-","dir":"Reference","previous_headings":"","what":"Method parse_neoepitope()","title":"Linx Object — Linx","text":"Read neoepitope.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_neoepitope(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-neoepitope-","dir":"Reference","previous_headings":"","what":"Method tidy_neoepitope()","title":"Linx Object — Linx","text":"Tidy neoepitope.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_neoepitope(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-svs-","dir":"Reference","previous_headings":"","what":"Method parse_svs()","title":"Linx Object — Linx","text":"Read svs.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_svs(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-svs-","dir":"Reference","previous_headings":"","what":"Method tidy_svs()","title":"Linx Object — Linx","text":"Tidy svs.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_svs(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-viscn-","dir":"Reference","previous_headings":"","what":"Method parse_viscn()","title":"Linx Object — Linx","text":"Read linx.vis_copy_number.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_viscn(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-viscn-","dir":"Reference","previous_headings":"","what":"Method tidy_viscn()","title":"Linx Object — Linx","text":"Tidy linx.vis_copy_number.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_viscn(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-visfusion-","dir":"Reference","previous_headings":"","what":"Method parse_visfusion()","title":"Linx Object — Linx","text":"Read linx.vis_fusion.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_visfusion(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-visfusion-","dir":"Reference","previous_headings":"","what":"Method tidy_visfusion()","title":"Linx Object — Linx","text":"Tidy linx.vis_fusion.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_visfusion(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-visgeneexon-","dir":"Reference","previous_headings":"","what":"Method parse_visgeneexon()","title":"Linx Object — Linx","text":"Read linx.vis_gene_exon.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_visgeneexon(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-visgeneexon-","dir":"Reference","previous_headings":"","what":"Method tidy_visgeneexon()","title":"Linx Object — Linx","text":"Tidy linx.vis_gene_exon.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_visgeneexon(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-visproteindomain-","dir":"Reference","previous_headings":"","what":"Method parse_visproteindomain()","title":"Linx Object — Linx","text":"Read linx.vis_protein_domain.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_visproteindomain(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-visproteindomain-","dir":"Reference","previous_headings":"","what":"Method tidy_visproteindomain()","title":"Linx Object — Linx","text":"Tidy linx.vis_protein_domain.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_visproteindomain(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-vissegments-","dir":"Reference","previous_headings":"","what":"Method parse_vissegments()","title":"Linx Object — Linx","text":"Read linx.vis_segments.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_vissegments(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-vissegments-","dir":"Reference","previous_headings":"","what":"Method tidy_vissegments()","title":"Linx Object — Linx","text":"Tidy linx.vis_segments.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_vissegments(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-vissvdata-","dir":"Reference","previous_headings":"","what":"Method parse_vissvdata()","title":"Linx Object — Linx","text":"Read linx.vis_sv_data.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_vissvdata(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-vissvdata-","dir":"Reference","previous_headings":"","what":"Method tidy_vissvdata()","title":"Linx Object — Linx","text":"Tidy linx.vis_sv_data.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_vissvdata(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-parse-version-","dir":"Reference","previous_headings":"","what":"Method parse_version()","title":"Linx Object — Linx","text":"Read linx.version file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$parse_version(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-tidy-version-","dir":"Reference","previous_headings":"","what":"Method tidy_version()","title":"Linx Object — Linx","text":"Tidy linx.version file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$tidy_version(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Linx Object — Linx","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Linx Object — Linx","text":"","code":"Linx$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linx Object — Linx","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Linx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linx Object — Linx","text":"","code":"cls <- Linx indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"linx_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_amber_bafpcf.parquet\"                #>  [2] \"sample1_amber_contaminationtsv.parquet\"      #>  [3] \"sample1_amber_homozygousregion.parquet\"      #>  [4] \"sample1_amber_qc.parquet\"                    #>  [5] \"sample1_chord_prediction.parquet\"            #>  [6] \"sample1_chord_signatures.parquet\"            #>  [7] \"sample1_cobalt_gcmed_bucket_stats.parquet\"   #>  [8] \"sample1_cobalt_gcmed_sample_stats.parquet\"   #>  [9] \"sample1_cobalt_ratiomed.parquet\"             #> [10] \"sample1_cobalt_ratiopcf.parquet\"             #> [11] \"sample1_cuppa_datatsv.parquet\"               #> [12] \"sample1_cuppa_feat.parquet\"                  #> [13] \"sample1_cuppa_predsum.parquet\"               #> [14] \"sample1_germline_linx_breakends.parquet\"     #> [15] \"sample1_germline_linx_clusters.parquet\"      #> [16] \"sample1_germline_linx_drivercatalog.parquet\" #> [17] \"sample1_germline_linx_links.parquet\"         #> [18] \"sample1_germline_linx_svs.parquet\"           #> [19] \"sample1_lilac_qc.parquet\"                    #> [20] \"sample1_lilac_summary.parquet\"               #> [21] \"sample1_linx_breakends.parquet\"              #> [22] \"sample1_linx_clusters.parquet\"               #> [23] \"sample1_linx_drivercatalog.parquet\"          #> [24] \"sample1_linx_drivers.parquet\"                #> [25] \"sample1_linx_fusions.parquet\"                #> [26] \"sample1_linx_links.parquet\"                  #> [27] \"sample1_linx_svs.parquet\"                    #> [28] \"sample1_linx_viscn.parquet\"                  #> [29] \"sample1_linx_visfusion.parquet\"              #> [30] \"sample1_linx_visgeneexon.parquet\"            #> [31] \"sample1_linx_visproteindomain.parquet\"       #> [32] \"sample1_linx_vissegments.parquet\"            #> [33] \"sample1_linx_vissvdata.parquet\"              #> [34] \"version_2_linx_version.parquet\"              #> [35] \"version_cobalt_version.parquet\"              #> [36] \"version_linx_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/NEMO_TOOLS.html","id":null,"dir":"Reference","previous_headings":"","what":"Nemo Tool Names — NEMO_TOOLS","title":"Nemo Tool Names — NEMO_TOOLS","text":"Vector supported nemo tool names.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/NEMO_TOOLS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nemo Tool Names — NEMO_TOOLS","text":"","code":"NEMO_TOOLS"},{"path":"https://umccr.github.io/tidywigits/reference/NEMO_TOOLS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Nemo Tool Names — NEMO_TOOLS","text":"object class character length 16.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":null,"dir":"Reference","previous_headings":"","what":"Oncoanalyser Object — Oncoanalyser","title":"Oncoanalyser Object — Oncoanalyser","text":"Oncoanalyser file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Oncoanalyser Object — Oncoanalyser","text":"tidywigits::Workflow -> Oncoanalyser","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Oncoanalyser Object — Oncoanalyser","text":"tidywigits::Workflow$filter_files() tidywigits::Workflow$get_raw_schemas_all() tidywigits::Workflow$get_tbls() tidywigits::Workflow$get_tidy_schemas_all() tidywigits::Workflow$list_files() tidywigits::Workflow$nemofy() tidywigits::Workflow$print() tidywigits::Workflow$tidy() tidywigits::Workflow$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Oncoanalyser Object — Oncoanalyser","text":"Oncoanalyser$new() Oncoanalyser$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Oncoanalyser Object — Oncoanalyser","text":"Create new Oncoanalyser object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Oncoanalyser Object — Oncoanalyser","text":"","code":"Oncoanalyser$new(path = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Oncoanalyser Object — Oncoanalyser","text":"path (character(n)) Path(s) Oncoanalyser results.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Oncoanalyser Object — Oncoanalyser","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Oncoanalyser Object — Oncoanalyser","text":"","code":"Oncoanalyser$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Oncoanalyser Object — Oncoanalyser","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Oncoanalyser.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Oncoanalyser Object — Oncoanalyser","text":"","code":"if (FALSE) { # \\dontrun{ path <- here::here(\"nogit/oa_v2\") oa <- Oncoanalyser$new(path) x <-   oa$nemofy(     odir = \"nogit/test_data\",     format = \"parquet\",     id = \"run1\" ) dbconn <- DBI::dbConnect(   drv = RPostgres::Postgres(),   dbname = \"nemo\",   user = \"orcabus\" ) x <-   oa$nemofy(     format = \"db\",     id = \"runABC456\",     dbconn = dbconn ) } # }"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":null,"dir":"Reference","previous_headings":"","what":"Purple Object — Purple","title":"Purple Object — Purple","text":"Purple file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Purple Object — Purple","text":"tidywigits::Tool -> Purple","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Purple Object — Purple","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Purple Object — Purple","text":"Purple$new() Purple$list_files() Purple$parse_qc() Purple$tidy_qc() Purple$parse_cnvgenetsv() Purple$tidy_cnvgenetsv() Purple$parse_cnvsomtsv() Purple$tidy_cnvsomtsv() Purple$parse_drivercatalog() Purple$tidy_drivercatalog() Purple$parse_germdeltsv() Purple$tidy_germdeltsv() Purple$parse_purityrange() Purple$tidy_purityrange() Purple$parse_puritytsv() Purple$tidy_puritytsv() Purple$parse_somclonality() Purple$tidy_somclonality() Purple$parse_somhist() Purple$tidy_somhist() Purple$parse_version() Purple$tidy_version() Purple$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Purple Object — Purple","text":"Create new Purple object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-list-files-","dir":"Reference","previous_headings":"","what":"Method list_files()","title":"Purple Object — Purple","text":"List files given purple directory. Overwrites parent class handle germline driver.catalog files.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$list_files(type = \"file\")"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"type (character(1)) File type(s) return (e.g. , file, directory, symlink). See fs::dir_info.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Purple Object — Purple","text":"tibble file paths.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-parse-qc-","dir":"Reference","previous_headings":"","what":"Method parse_qc()","title":"Purple Object — Purple","text":"Read purple.qc file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$parse_qc(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-tidy-qc-","dir":"Reference","previous_headings":"","what":"Method tidy_qc()","title":"Purple Object — Purple","text":"Tidy purple.qc file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$tidy_qc(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-parse-cnvgenetsv-","dir":"Reference","previous_headings":"","what":"Method parse_cnvgenetsv()","title":"Purple Object — Purple","text":"Read purple.cnv.gene.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$parse_cnvgenetsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-tidy-cnvgenetsv-","dir":"Reference","previous_headings":"","what":"Method tidy_cnvgenetsv()","title":"Purple Object — Purple","text":"Tidy purple.cnv.gene.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$tidy_cnvgenetsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-parse-cnvsomtsv-","dir":"Reference","previous_headings":"","what":"Method parse_cnvsomtsv()","title":"Purple Object — Purple","text":"Read purple.cnv.somatic.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$parse_cnvsomtsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-tidy-cnvsomtsv-","dir":"Reference","previous_headings":"","what":"Method tidy_cnvsomtsv()","title":"Purple Object — Purple","text":"Tidy purple.cnv.somatic.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$tidy_cnvsomtsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-parse-drivercatalog-","dir":"Reference","previous_headings":"","what":"Method parse_drivercatalog()","title":"Purple Object — Purple","text":"Read purple.driver.catalog.germline|somatic.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$parse_drivercatalog(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-tidy-drivercatalog-","dir":"Reference","previous_headings":"","what":"Method tidy_drivercatalog()","title":"Purple Object — Purple","text":"Tidy purple.driver.catalog.germline|somatic.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$tidy_drivercatalog(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-parse-germdeltsv-","dir":"Reference","previous_headings":"","what":"Method parse_germdeltsv()","title":"Purple Object — Purple","text":"Read purple.germline.deletion.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$parse_germdeltsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-tidy-germdeltsv-","dir":"Reference","previous_headings":"","what":"Method tidy_germdeltsv()","title":"Purple Object — Purple","text":"Tidy purple.germline.deletion.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$tidy_germdeltsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-parse-purityrange-","dir":"Reference","previous_headings":"","what":"Method parse_purityrange()","title":"Purple Object — Purple","text":"Read purple.purity.range.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$parse_purityrange(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-tidy-purityrange-","dir":"Reference","previous_headings":"","what":"Method tidy_purityrange()","title":"Purple Object — Purple","text":"Tidy purple.purity.range.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$tidy_purityrange(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-parse-puritytsv-","dir":"Reference","previous_headings":"","what":"Method parse_puritytsv()","title":"Purple Object — Purple","text":"Read purple.purity.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$parse_puritytsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-tidy-puritytsv-","dir":"Reference","previous_headings":"","what":"Method tidy_puritytsv()","title":"Purple Object — Purple","text":"Tidy purple.purity.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$tidy_puritytsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-parse-somclonality-","dir":"Reference","previous_headings":"","what":"Method parse_somclonality()","title":"Purple Object — Purple","text":"Read purple.somatic.clonality.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$parse_somclonality(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-tidy-somclonality-","dir":"Reference","previous_headings":"","what":"Method tidy_somclonality()","title":"Purple Object — Purple","text":"Tidy purple.somatic.clonality.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$tidy_somclonality(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-parse-somhist-","dir":"Reference","previous_headings":"","what":"Method parse_somhist()","title":"Purple Object — Purple","text":"Read purple.somatic.hist.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$parse_somhist(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-tidy-somhist-","dir":"Reference","previous_headings":"","what":"Method tidy_somhist()","title":"Purple Object — Purple","text":"Tidy purple.somatic.hist.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$tidy_somhist(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-parse-version-","dir":"Reference","previous_headings":"","what":"Method parse_version()","title":"Purple Object — Purple","text":"Read purple.version file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$parse_version(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-tidy-version-","dir":"Reference","previous_headings":"","what":"Method tidy_version()","title":"Purple Object — Purple","text":"Tidy purple.version file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$tidy_version(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Purple Object — Purple","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Purple Object — Purple","text":"","code":"Purple$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Purple Object — Purple","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Purple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Purple Object — Purple","text":"","code":"cls <- Purple indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"purple_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_amber_bafpcf.parquet\"                  #>  [2] \"sample1_amber_contaminationtsv.parquet\"        #>  [3] \"sample1_amber_homozygousregion.parquet\"        #>  [4] \"sample1_amber_qc.parquet\"                      #>  [5] \"sample1_chord_prediction.parquet\"              #>  [6] \"sample1_chord_signatures.parquet\"              #>  [7] \"sample1_cobalt_gcmed_bucket_stats.parquet\"     #>  [8] \"sample1_cobalt_gcmed_sample_stats.parquet\"     #>  [9] \"sample1_cobalt_ratiomed.parquet\"               #> [10] \"sample1_cobalt_ratiopcf.parquet\"               #> [11] \"sample1_cuppa_datatsv.parquet\"                 #> [12] \"sample1_cuppa_feat.parquet\"                    #> [13] \"sample1_cuppa_predsum.parquet\"                 #> [14] \"sample1_germline_linx_breakends.parquet\"       #> [15] \"sample1_germline_linx_clusters.parquet\"        #> [16] \"sample1_germline_linx_drivercatalog.parquet\"   #> [17] \"sample1_germline_linx_links.parquet\"           #> [18] \"sample1_germline_linx_svs.parquet\"             #> [19] \"sample1_germline_purple_drivercatalog.parquet\" #> [20] \"sample1_lilac_qc.parquet\"                      #> [21] \"sample1_lilac_summary.parquet\"                 #> [22] \"sample1_linx_breakends.parquet\"                #> [23] \"sample1_linx_clusters.parquet\"                 #> [24] \"sample1_linx_drivercatalog.parquet\"            #> [25] \"sample1_linx_drivers.parquet\"                  #> [26] \"sample1_linx_fusions.parquet\"                  #> [27] \"sample1_linx_links.parquet\"                    #> [28] \"sample1_linx_svs.parquet\"                      #> [29] \"sample1_linx_viscn.parquet\"                    #> [30] \"sample1_linx_visfusion.parquet\"                #> [31] \"sample1_linx_visgeneexon.parquet\"              #> [32] \"sample1_linx_visproteindomain.parquet\"         #> [33] \"sample1_linx_vissegments.parquet\"              #> [34] \"sample1_linx_vissvdata.parquet\"                #> [35] \"sample1_purple_cnvgenetsv.parquet\"             #> [36] \"sample1_purple_cnvsomtsv.parquet\"              #> [37] \"sample1_purple_drivercatalog.parquet\"          #> [38] \"sample1_purple_germdeltsv.parquet\"             #> [39] \"sample1_purple_purityrange.parquet\"            #> [40] \"sample1_purple_puritytsv.parquet\"              #> [41] \"sample1_purple_qc.parquet\"                     #> [42] \"sample1_purple_somclonality.parquet\"           #> [43] \"sample1_purple_somhist.parquet\"                #> [44] \"version_2_linx_version.parquet\"                #> [45] \"version_cobalt_version.parquet\"                #> [46] \"version_linx_version.parquet\"                  #> [47] \"version_purple_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":null,"dir":"Reference","previous_headings":"","what":"Sage Object — Sage","title":"Sage Object — Sage","text":"Sage file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Sage Object — Sage","text":"tidywigits::Tool -> Sage","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Sage Object — Sage","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Sage Object — Sage","text":"Sage$new() Sage$parse_bqrtsv() Sage$tidy_bqrtsv() Sage$parse_genecvg() Sage$tidy_genecvg() Sage$parse_exoncvg() Sage$tidy_exoncvg() Sage$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Sage Object — Sage","text":"Create new Sage object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sage Object — Sage","text":"","code":"Sage$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sage Object — Sage","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"method-parse-bqrtsv-","dir":"Reference","previous_headings":"","what":"Method parse_bqrtsv()","title":"Sage Object — Sage","text":"Read bqr.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Sage Object — Sage","text":"","code":"Sage$parse_bqrtsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sage Object — Sage","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"method-tidy-bqrtsv-","dir":"Reference","previous_headings":"","what":"Method tidy_bqrtsv()","title":"Sage Object — Sage","text":"Tidy bqr.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Sage Object — Sage","text":"","code":"Sage$tidy_bqrtsv(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sage Object — Sage","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"method-parse-genecvg-","dir":"Reference","previous_headings":"","what":"Method parse_genecvg()","title":"Sage Object — Sage","text":"Read gene.coverage.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Sage Object — Sage","text":"","code":"Sage$parse_genecvg(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sage Object — Sage","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"method-tidy-genecvg-","dir":"Reference","previous_headings":"","what":"Method tidy_genecvg()","title":"Sage Object — Sage","text":"Tidy gene.coverage.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Sage Object — Sage","text":"","code":"Sage$tidy_genecvg(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sage Object — Sage","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"method-parse-exoncvg-","dir":"Reference","previous_headings":"","what":"Method parse_exoncvg()","title":"Sage Object — Sage","text":"Read exon.medians.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Sage Object — Sage","text":"","code":"Sage$parse_exoncvg(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sage Object — Sage","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"method-tidy-exoncvg-","dir":"Reference","previous_headings":"","what":"Method tidy_exoncvg()","title":"Sage Object — Sage","text":"Tidy exon.medians.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Sage Object — Sage","text":"","code":"Sage$tidy_exoncvg(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sage Object — Sage","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Sage Object — Sage","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Sage Object — Sage","text":"","code":"Sage$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sage Object — Sage","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sage Object — Sage","text":"","code":"cls <- Sage indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"sage_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_2_sage_bqrtsv.parquet\"                 #>  [2] \"sample1_amber_bafpcf.parquet\"                  #>  [3] \"sample1_amber_contaminationtsv.parquet\"        #>  [4] \"sample1_amber_homozygousregion.parquet\"        #>  [5] \"sample1_amber_qc.parquet\"                      #>  [6] \"sample1_chord_prediction.parquet\"              #>  [7] \"sample1_chord_signatures.parquet\"              #>  [8] \"sample1_cobalt_gcmed_bucket_stats.parquet\"     #>  [9] \"sample1_cobalt_gcmed_sample_stats.parquet\"     #> [10] \"sample1_cobalt_ratiomed.parquet\"               #> [11] \"sample1_cobalt_ratiopcf.parquet\"               #> [12] \"sample1_cuppa_datatsv.parquet\"                 #> [13] \"sample1_cuppa_feat.parquet\"                    #> [14] \"sample1_cuppa_predsum.parquet\"                 #> [15] \"sample1_germline_linx_breakends.parquet\"       #> [16] \"sample1_germline_linx_clusters.parquet\"        #> [17] \"sample1_germline_linx_drivercatalog.parquet\"   #> [18] \"sample1_germline_linx_links.parquet\"           #> [19] \"sample1_germline_linx_svs.parquet\"             #> [20] \"sample1_germline_purple_drivercatalog.parquet\" #> [21] \"sample1_lilac_qc.parquet\"                      #> [22] \"sample1_lilac_summary.parquet\"                 #> [23] \"sample1_linx_breakends.parquet\"                #> [24] \"sample1_linx_clusters.parquet\"                 #> [25] \"sample1_linx_drivercatalog.parquet\"            #> [26] \"sample1_linx_drivers.parquet\"                  #> [27] \"sample1_linx_fusions.parquet\"                  #> [28] \"sample1_linx_links.parquet\"                    #> [29] \"sample1_linx_svs.parquet\"                      #> [30] \"sample1_linx_viscn.parquet\"                    #> [31] \"sample1_linx_visfusion.parquet\"                #> [32] \"sample1_linx_visgeneexon.parquet\"              #> [33] \"sample1_linx_visproteindomain.parquet\"         #> [34] \"sample1_linx_vissegments.parquet\"              #> [35] \"sample1_linx_vissvdata.parquet\"                #> [36] \"sample1_purple_cnvgenetsv.parquet\"             #> [37] \"sample1_purple_cnvsomtsv.parquet\"              #> [38] \"sample1_purple_drivercatalog.parquet\"          #> [39] \"sample1_purple_germdeltsv.parquet\"             #> [40] \"sample1_purple_purityrange.parquet\"            #> [41] \"sample1_purple_puritytsv.parquet\"              #> [42] \"sample1_purple_qc.parquet\"                     #> [43] \"sample1_purple_somclonality.parquet\"           #> [44] \"sample1_purple_somhist.parquet\"                #> [45] \"sample1_sage_bqrtsv.parquet\"                   #> [46] \"sample1_sage_exoncvg.parquet\"                  #> [47] \"sample1_sage_genecvg_cvg.parquet\"              #> [48] \"sample1_sage_genecvg_genes.parquet\"            #> [49] \"sample2_2_sage_bqrtsv.parquet\"                 #> [50] \"sample2_sage_bqrtsv.parquet\"                   #> [51] \"sample2_sage_exoncvg.parquet\"                  #> [52] \"sample2_sage_genecvg_cvg.parquet\"              #> [53] \"sample2_sage_genecvg_genes.parquet\"            #> [54] \"version_2_linx_version.parquet\"                #> [55] \"version_cobalt_version.parquet\"                #> [56] \"version_linx_version.parquet\"                  #> [57] \"version_purple_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":null,"dir":"Reference","previous_headings":"","what":"Sigs Object — Sigs","title":"Sigs Object — Sigs","text":"Sigs file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Sigs Object — Sigs","text":"tidywigits::Tool -> Sigs","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Sigs Object — Sigs","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Sigs Object — Sigs","text":"Sigs$new() Sigs$parse_allocation() Sigs$tidy_allocation() Sigs$parse_snvcounts() Sigs$tidy_snvcounts() Sigs$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Sigs Object — Sigs","text":"Create new Sigs object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sigs Object — Sigs","text":"","code":"Sigs$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sigs Object — Sigs","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"method-parse-allocation-","dir":"Reference","previous_headings":"","what":"Method parse_allocation()","title":"Sigs Object — Sigs","text":"Read allocation.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Sigs Object — Sigs","text":"","code":"Sigs$parse_allocation(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sigs Object — Sigs","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"method-tidy-allocation-","dir":"Reference","previous_headings":"","what":"Method tidy_allocation()","title":"Sigs Object — Sigs","text":"Tidy allocation.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Sigs Object — Sigs","text":"","code":"Sigs$tidy_allocation(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sigs Object — Sigs","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"method-parse-snvcounts-","dir":"Reference","previous_headings":"","what":"Method parse_snvcounts()","title":"Sigs Object — Sigs","text":"Read snv_counts.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Sigs Object — Sigs","text":"","code":"Sigs$parse_snvcounts(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sigs Object — Sigs","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"method-tidy-snvcounts-","dir":"Reference","previous_headings":"","what":"Method tidy_snvcounts()","title":"Sigs Object — Sigs","text":"Tidy snv_counts.csv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Sigs Object — Sigs","text":"","code":"Sigs$tidy_snvcounts(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sigs Object — Sigs","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Sigs Object — Sigs","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Sigs Object — Sigs","text":"","code":"Sigs$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sigs Object — Sigs","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Sigs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sigs Object — Sigs","text":"","code":"cls <- Sigs indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"sigs_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_2_sage_bqrtsv.parquet\"                 #>  [2] \"sample1_amber_bafpcf.parquet\"                  #>  [3] \"sample1_amber_contaminationtsv.parquet\"        #>  [4] \"sample1_amber_homozygousregion.parquet\"        #>  [5] \"sample1_amber_qc.parquet\"                      #>  [6] \"sample1_chord_prediction.parquet\"              #>  [7] \"sample1_chord_signatures.parquet\"              #>  [8] \"sample1_cobalt_gcmed_bucket_stats.parquet\"     #>  [9] \"sample1_cobalt_gcmed_sample_stats.parquet\"     #> [10] \"sample1_cobalt_ratiomed.parquet\"               #> [11] \"sample1_cobalt_ratiopcf.parquet\"               #> [12] \"sample1_cuppa_datatsv.parquet\"                 #> [13] \"sample1_cuppa_feat.parquet\"                    #> [14] \"sample1_cuppa_predsum.parquet\"                 #> [15] \"sample1_germline_linx_breakends.parquet\"       #> [16] \"sample1_germline_linx_clusters.parquet\"        #> [17] \"sample1_germline_linx_drivercatalog.parquet\"   #> [18] \"sample1_germline_linx_links.parquet\"           #> [19] \"sample1_germline_linx_svs.parquet\"             #> [20] \"sample1_germline_purple_drivercatalog.parquet\" #> [21] \"sample1_lilac_qc.parquet\"                      #> [22] \"sample1_lilac_summary.parquet\"                 #> [23] \"sample1_linx_breakends.parquet\"                #> [24] \"sample1_linx_clusters.parquet\"                 #> [25] \"sample1_linx_drivercatalog.parquet\"            #> [26] \"sample1_linx_drivers.parquet\"                  #> [27] \"sample1_linx_fusions.parquet\"                  #> [28] \"sample1_linx_links.parquet\"                    #> [29] \"sample1_linx_svs.parquet\"                      #> [30] \"sample1_linx_viscn.parquet\"                    #> [31] \"sample1_linx_visfusion.parquet\"                #> [32] \"sample1_linx_visgeneexon.parquet\"              #> [33] \"sample1_linx_visproteindomain.parquet\"         #> [34] \"sample1_linx_vissegments.parquet\"              #> [35] \"sample1_linx_vissvdata.parquet\"                #> [36] \"sample1_purple_cnvgenetsv.parquet\"             #> [37] \"sample1_purple_cnvsomtsv.parquet\"              #> [38] \"sample1_purple_drivercatalog.parquet\"          #> [39] \"sample1_purple_germdeltsv.parquet\"             #> [40] \"sample1_purple_purityrange.parquet\"            #> [41] \"sample1_purple_puritytsv.parquet\"              #> [42] \"sample1_purple_qc.parquet\"                     #> [43] \"sample1_purple_somclonality.parquet\"           #> [44] \"sample1_purple_somhist.parquet\"                #> [45] \"sample1_sage_bqrtsv.parquet\"                   #> [46] \"sample1_sage_exoncvg.parquet\"                  #> [47] \"sample1_sage_genecvg_cvg.parquet\"              #> [48] \"sample1_sage_genecvg_genes.parquet\"            #> [49] \"sample1_sigs_allocation.parquet\"               #> [50] \"sample1_sigs_snvcounts.parquet\"                #> [51] \"sample2_2_sage_bqrtsv.parquet\"                 #> [52] \"sample2_sage_bqrtsv.parquet\"                   #> [53] \"sample2_sage_exoncvg.parquet\"                  #> [54] \"sample2_sage_genecvg_cvg.parquet\"              #> [55] \"sample2_sage_genecvg_genes.parquet\"            #> [56] \"version_2_linx_version.parquet\"                #> [57] \"version_cobalt_version.parquet\"                #> [58] \"version_linx_version.parquet\"                  #> [59] \"version_purple_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":null,"dir":"Reference","previous_headings":"","what":"Tool Object — Tool","title":"Tool Object — Tool","text":"Base class WiGiTS tools.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Tool Object — Tool","text":"name (character(1)) Name tool. path (character(1)) Output directory tool. config (Config()) Config tool. files (tibble()) Tibble files matching available Tool patterns. tbls (tibble()) Tibble tidy tibbles. raw_schemas_all (tibble()) raw schemas tool. tidy_schemas_all (tibble()) tidy schemas tool. get_tidy_schema (function()) Get specific tidy schema. get_raw_schema (function()) Get specific raw schema. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":[]},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Tool Object — Tool","text":"Tool$new() Tool$print() Tool$filter_files() Tool$list_files() Tool$.parse_file() Tool$.tidy_file() Tool$.parse_file_nohead() Tool$.eval_func() Tool$tidy() Tool$write() Tool$nemofy() Tool$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Tool Object — Tool","text":"Create new Tool object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$new(name = NULL, path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"name (character(1)) Name tool. path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Tool Object — Tool","text":"Print details Tool.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$print(...)"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Tool Object — Tool","text":"self invisibly.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-filter-files-","dir":"Reference","previous_headings":"","what":"Method filter_files()","title":"Tool Object — Tool","text":"Filter files given tool directory.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$filter_files(include = NULL, exclude = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"include (character(n)) Files include. exclude (character(n)) Files exclude.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Tool Object — Tool","text":"tibble files potentially removed rows.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-list-files-","dir":"Reference","previous_headings":"","what":"Method list_files()","title":"Tool Object — Tool","text":"List files given tool directory.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$list_files(type = \"file\")"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"type (character(1)) File type(s) return (e.g. , file, directory, symlink). See fs::dir_info.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Tool Object — Tool","text":"tibble file paths.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-parse-file-","dir":"Reference","previous_headings":"","what":"Method .parse_file()","title":"Tool Object — Tool","text":"Parse file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$.parse_file(x, name, delim = \"\\t\", ...)"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"x (character(1)) File path. name (character(1)) Parser name (e.g. \"breakends\" - see docs). delim (character(1)) File delimiter. ... Passed readr::read_delim.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Tool Object — Tool","text":"tibble parsed data.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-tidy-file-","dir":"Reference","previous_headings":"","what":"Method .tidy_file()","title":"Tool Object — Tool","text":"Tidy file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$.tidy_file(x, name, convert_types = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"x (character(1) tibble()) File path already parsed raw tibble. name (character(1)) Parser name (e.g. \"breakends\" - see docs). convert_types (logical(1)) Convert field types based schema.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Tool Object — Tool","text":"tibble tidy data enframed.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-parse-file-nohead-","dir":"Reference","previous_headings":"","what":"Method .parse_file_nohead()","title":"Tool Object — Tool","text":"Parse headless file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$.parse_file_nohead(x, pname, delim = \"\\t\", ...)"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"x (character(1)) File path. pname (character(1)) Parser name (e.g. \"breakends\" - see docs). delim (character(1)) File delimiter. ... Passed readr::read_delim.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Tool Object — Tool","text":"tibble parsed data.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-eval-func-","dir":"Reference","previous_headings":"","what":"Method .eval_func()","title":"Tool Object — Tool","text":"Evaluate function context Tool's environment.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$.eval_func(fun, envir = self)"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"fun (character(1)) Function Tool evaluate. envir (environment()) Environment evaluate function within.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Tool Object — Tool","text":"evaluated function.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-tidy-","dir":"Reference","previous_headings":"","what":"Method tidy()","title":"Tool Object — Tool","text":"Tidy list files.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$tidy(tidy = TRUE, keep_raw = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"tidy (logical(1)) raw parsed tibbles get tidied? keep_raw (logical(1)) raw parsed tibbles kept final output?","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Tool Object — Tool","text":"self invisibly.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"Tool Object — Tool","text":"Write tidy tibbles.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$write(odir = \".\", format = \"tsv\", id = NULL, dbconn = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"odir (character(1)) Directory path output tidy files. Ignored format db. format (character(1)) Format output files. id (character(1)) ID use dataset (e.g. wfrid.123, prid.456). dbconn (DBIConnection) Database connection object (see DBI::dbConnect).","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Tool Object — Tool","text":"tibble tidy data output location prefix.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-nemofy-","dir":"Reference","previous_headings":"","what":"Method nemofy()","title":"Tool Object — Tool","text":"Parse, filter, tidy write files.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$nemofy(   odir = \".\",   format = \"tsv\",   id = NULL,   dbconn = NULL,   include = NULL,   exclude = NULL )"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"odir (character(1)) Directory path output tidy files. format (character(1)) Format output files. id (character(1)) ID use dataset (e.g. wfrid.123, prid.456). dbconn (DBIConnection) Database connection object (see DBI::dbConnect). include (character(n)) Files include. exclude (character(n)) Files exclude.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Tool Object — Tool","text":"tibble tidy data output location prefix.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Tool Object — Tool","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Tool Object — Tool","text":"","code":"Tool$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tool Object — Tool","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Tool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tool Object — Tool","text":"","code":"if (FALSE) { # \\dontrun{ path <- here::here(   \"nogit/oa_v1\" ) # demo filter + tidy a <- Alignments$new(path = path)$   filter_files(exclude = \"alignments_dupfreq\")$   tidy(keep_raw = TRUE) a$tbls a$files a$list_files() lx <- Linx$new(path) dbconn <- DBI::dbConnect(   drv = RPostgres::Postgres(),   dbname = \"nemo\",   user = \"orcabus\" ) lx$nemofy(     odir = \"nogit/test_data\",     format = \"db\", # \"parquet\",     id = \"run2\",     dbconn = dbconn,     include = NULL,     exclude = NULL ) DBI::dbDisconnect(dbconn) } # }"},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":null,"dir":"Reference","previous_headings":"","what":"Virusbreakend Object — Virusbreakend","title":"Virusbreakend Object — Virusbreakend","text":"Virusbreakend file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Virusbreakend Object — Virusbreakend","text":"tidywigits::Tool -> Virusbreakend","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Virusbreakend Object — Virusbreakend","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Virusbreakend Object — Virusbreakend","text":"Virusbreakend$new() Virusbreakend$parse_summary() Virusbreakend$tidy_summary() Virusbreakend$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Virusbreakend Object — Virusbreakend","text":"Create new Virusbreakend object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Virusbreakend Object — Virusbreakend","text":"","code":"Virusbreakend$new(path = NULL, files_tbl = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virusbreakend Object — Virusbreakend","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"method-parse-summary-","dir":"Reference","previous_headings":"","what":"Method parse_summary()","title":"Virusbreakend Object — Virusbreakend","text":"Read vcf.summary.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Virusbreakend Object — Virusbreakend","text":"","code":"Virusbreakend$parse_summary(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virusbreakend Object — Virusbreakend","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"method-tidy-summary-","dir":"Reference","previous_headings":"","what":"Method tidy_summary()","title":"Virusbreakend Object — Virusbreakend","text":"Tidy vcf.summary.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Virusbreakend Object — Virusbreakend","text":"","code":"Virusbreakend$tidy_summary(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virusbreakend Object — Virusbreakend","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Virusbreakend Object — Virusbreakend","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Virusbreakend Object — Virusbreakend","text":"","code":"Virusbreakend$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virusbreakend Object — Virusbreakend","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusbreakend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Virusbreakend Object — Virusbreakend","text":"","code":"cls <- Virusbreakend indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"virusbreakend_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_2_sage_bqrtsv.parquet\"                 #>  [2] \"sample1_amber_bafpcf.parquet\"                  #>  [3] \"sample1_amber_contaminationtsv.parquet\"        #>  [4] \"sample1_amber_homozygousregion.parquet\"        #>  [5] \"sample1_amber_qc.parquet\"                      #>  [6] \"sample1_chord_prediction.parquet\"              #>  [7] \"sample1_chord_signatures.parquet\"              #>  [8] \"sample1_cobalt_gcmed_bucket_stats.parquet\"     #>  [9] \"sample1_cobalt_gcmed_sample_stats.parquet\"     #> [10] \"sample1_cobalt_ratiomed.parquet\"               #> [11] \"sample1_cobalt_ratiopcf.parquet\"               #> [12] \"sample1_cuppa_datatsv.parquet\"                 #> [13] \"sample1_cuppa_feat.parquet\"                    #> [14] \"sample1_cuppa_predsum.parquet\"                 #> [15] \"sample1_germline_linx_breakends.parquet\"       #> [16] \"sample1_germline_linx_clusters.parquet\"        #> [17] \"sample1_germline_linx_drivercatalog.parquet\"   #> [18] \"sample1_germline_linx_links.parquet\"           #> [19] \"sample1_germline_linx_svs.parquet\"             #> [20] \"sample1_germline_purple_drivercatalog.parquet\" #> [21] \"sample1_lilac_qc.parquet\"                      #> [22] \"sample1_lilac_summary.parquet\"                 #> [23] \"sample1_linx_breakends.parquet\"                #> [24] \"sample1_linx_clusters.parquet\"                 #> [25] \"sample1_linx_drivercatalog.parquet\"            #> [26] \"sample1_linx_drivers.parquet\"                  #> [27] \"sample1_linx_fusions.parquet\"                  #> [28] \"sample1_linx_links.parquet\"                    #> [29] \"sample1_linx_svs.parquet\"                      #> [30] \"sample1_linx_viscn.parquet\"                    #> [31] \"sample1_linx_visfusion.parquet\"                #> [32] \"sample1_linx_visgeneexon.parquet\"              #> [33] \"sample1_linx_visproteindomain.parquet\"         #> [34] \"sample1_linx_vissegments.parquet\"              #> [35] \"sample1_linx_vissvdata.parquet\"                #> [36] \"sample1_purple_cnvgenetsv.parquet\"             #> [37] \"sample1_purple_cnvsomtsv.parquet\"              #> [38] \"sample1_purple_drivercatalog.parquet\"          #> [39] \"sample1_purple_germdeltsv.parquet\"             #> [40] \"sample1_purple_purityrange.parquet\"            #> [41] \"sample1_purple_puritytsv.parquet\"              #> [42] \"sample1_purple_qc.parquet\"                     #> [43] \"sample1_purple_somclonality.parquet\"           #> [44] \"sample1_purple_somhist.parquet\"                #> [45] \"sample1_sage_bqrtsv.parquet\"                   #> [46] \"sample1_sage_exoncvg.parquet\"                  #> [47] \"sample1_sage_genecvg_cvg.parquet\"              #> [48] \"sample1_sage_genecvg_genes.parquet\"            #> [49] \"sample1_sigs_allocation.parquet\"               #> [50] \"sample1_sigs_snvcounts.parquet\"                #> [51] \"sample1_virusbreakend_summary.parquet\"         #> [52] \"sample2_2_sage_bqrtsv.parquet\"                 #> [53] \"sample2_sage_bqrtsv.parquet\"                   #> [54] \"sample2_sage_exoncvg.parquet\"                  #> [55] \"sample2_sage_genecvg_cvg.parquet\"              #> [56] \"sample2_sage_genecvg_genes.parquet\"            #> [57] \"version_2_linx_version.parquet\"                #> [58] \"version_cobalt_version.parquet\"                #> [59] \"version_linx_version.parquet\"                  #> [60] \"version_purple_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":null,"dir":"Reference","previous_headings":"","what":"Virusinterpreter Object — Virusinterpreter","title":"Virusinterpreter Object — Virusinterpreter","text":"Virusinterpreter file parsing manipulation.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Virusinterpreter Object — Virusinterpreter","text":"tidywigits::Tool -> Virusinterpreter","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Virusinterpreter Object — Virusinterpreter","text":"tidywigits::Tool$.eval_func() tidywigits::Tool$.parse_file() tidywigits::Tool$.parse_file_nohead() tidywigits::Tool$.tidy_file() tidywigits::Tool$filter_files() tidywigits::Tool$list_files() tidywigits::Tool$nemofy() tidywigits::Tool$print() tidywigits::Tool$tidy() tidywigits::Tool$write()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Virusinterpreter Object — Virusinterpreter","text":"Virusinterpreter$new() Virusinterpreter$parse_annotated() Virusinterpreter$tidy_annotated() Virusinterpreter$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Virusinterpreter Object — Virusinterpreter","text":"Create new Virusinterpreter object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Virusinterpreter Object — Virusinterpreter","text":"","code":"Virusinterpreter$new(   path = NULL,   files_tbl = NULL,   tidy = TRUE,   keep_raw = FALSE )"},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virusinterpreter Object — Virusinterpreter","text":"path (character(1)) Output directory tool. files_tbl supplied, basically gets ignored. files_tbl (tibble(n)) Tibble files list_files_dir(). tidy (logical(1)) raw parsed tibbles get tidied? keep_raw (logical(1)) raw parsed tibbles kept final output?","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"method-parse-annotated-","dir":"Reference","previous_headings":"","what":"Method parse_annotated()","title":"Virusinterpreter Object — Virusinterpreter","text":"Read virus.annotated.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Virusinterpreter Object — Virusinterpreter","text":"","code":"Virusinterpreter$parse_annotated(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virusinterpreter Object — Virusinterpreter","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"method-tidy-annotated-","dir":"Reference","previous_headings":"","what":"Method tidy_annotated()","title":"Virusinterpreter Object — Virusinterpreter","text":"Tidy virus.annotated.tsv file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Virusinterpreter Object — Virusinterpreter","text":"","code":"Virusinterpreter$tidy_annotated(x)"},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virusinterpreter Object — Virusinterpreter","text":"x (character(1)) Path file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Virusinterpreter Object — Virusinterpreter","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Virusinterpreter Object — Virusinterpreter","text":"","code":"Virusinterpreter$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Virusinterpreter Object — Virusinterpreter","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Virusinterpreter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Virusinterpreter Object — Virusinterpreter","text":"","code":"cls <- Virusinterpreter indir <- system.file(\"extdata/oa\", package = \"tidywigits\") odir <- tempdir() id <- \"virusinterpreter_run1\" obj <- cls$new(indir) obj$nemofy(odir = odir, format = \"parquet\", id = id) list.files(odir, pattern = \"parquet\", full.names = FALSE) #>  [1] \"sample1_2_sage_bqrtsv.parquet\"                 #>  [2] \"sample1_amber_bafpcf.parquet\"                  #>  [3] \"sample1_amber_contaminationtsv.parquet\"        #>  [4] \"sample1_amber_homozygousregion.parquet\"        #>  [5] \"sample1_amber_qc.parquet\"                      #>  [6] \"sample1_chord_prediction.parquet\"              #>  [7] \"sample1_chord_signatures.parquet\"              #>  [8] \"sample1_cobalt_gcmed_bucket_stats.parquet\"     #>  [9] \"sample1_cobalt_gcmed_sample_stats.parquet\"     #> [10] \"sample1_cobalt_ratiomed.parquet\"               #> [11] \"sample1_cobalt_ratiopcf.parquet\"               #> [12] \"sample1_cuppa_datatsv.parquet\"                 #> [13] \"sample1_cuppa_feat.parquet\"                    #> [14] \"sample1_cuppa_predsum.parquet\"                 #> [15] \"sample1_germline_linx_breakends.parquet\"       #> [16] \"sample1_germline_linx_clusters.parquet\"        #> [17] \"sample1_germline_linx_drivercatalog.parquet\"   #> [18] \"sample1_germline_linx_links.parquet\"           #> [19] \"sample1_germline_linx_svs.parquet\"             #> [20] \"sample1_germline_purple_drivercatalog.parquet\" #> [21] \"sample1_lilac_qc.parquet\"                      #> [22] \"sample1_lilac_summary.parquet\"                 #> [23] \"sample1_linx_breakends.parquet\"                #> [24] \"sample1_linx_clusters.parquet\"                 #> [25] \"sample1_linx_drivercatalog.parquet\"            #> [26] \"sample1_linx_drivers.parquet\"                  #> [27] \"sample1_linx_fusions.parquet\"                  #> [28] \"sample1_linx_links.parquet\"                    #> [29] \"sample1_linx_svs.parquet\"                      #> [30] \"sample1_linx_viscn.parquet\"                    #> [31] \"sample1_linx_visfusion.parquet\"                #> [32] \"sample1_linx_visgeneexon.parquet\"              #> [33] \"sample1_linx_visproteindomain.parquet\"         #> [34] \"sample1_linx_vissegments.parquet\"              #> [35] \"sample1_linx_vissvdata.parquet\"                #> [36] \"sample1_purple_cnvgenetsv.parquet\"             #> [37] \"sample1_purple_cnvsomtsv.parquet\"              #> [38] \"sample1_purple_drivercatalog.parquet\"          #> [39] \"sample1_purple_germdeltsv.parquet\"             #> [40] \"sample1_purple_purityrange.parquet\"            #> [41] \"sample1_purple_puritytsv.parquet\"              #> [42] \"sample1_purple_qc.parquet\"                     #> [43] \"sample1_purple_somclonality.parquet\"           #> [44] \"sample1_purple_somhist.parquet\"                #> [45] \"sample1_sage_bqrtsv.parquet\"                   #> [46] \"sample1_sage_exoncvg.parquet\"                  #> [47] \"sample1_sage_genecvg_cvg.parquet\"              #> [48] \"sample1_sage_genecvg_genes.parquet\"            #> [49] \"sample1_sigs_allocation.parquet\"               #> [50] \"sample1_sigs_snvcounts.parquet\"                #> [51] \"sample1_virusbreakend_summary.parquet\"         #> [52] \"sample1_virusinterpreter_annotated.parquet\"    #> [53] \"sample2_2_sage_bqrtsv.parquet\"                 #> [54] \"sample2_sage_bqrtsv.parquet\"                   #> [55] \"sample2_sage_exoncvg.parquet\"                  #> [56] \"sample2_sage_genecvg_cvg.parquet\"              #> [57] \"sample2_sage_genecvg_genes.parquet\"            #> [58] \"version_2_linx_version.parquet\"                #> [59] \"version_cobalt_version.parquet\"                #> [60] \"version_linx_version.parquet\"                  #> [61] \"version_purple_version.parquet\""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Workflow Object — Workflow","title":"Workflow Object — Workflow","text":"Workflow composed multiple Tools.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Workflow Object — Workflow","text":"name (character(1)) Name workflow. path (character(n)) Path(s) workflow results. tools (list(n)) List Tools compose Workflow. files_tbl (tibble(n)) Tibble files list_files_dir().","code":""},{"path":[]},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Workflow Object — Workflow","text":"Workflow$new() Workflow$print() Workflow$filter_files() Workflow$list_files() Workflow$tidy() Workflow$write() Workflow$nemofy() Workflow$get_raw_schemas_all() Workflow$get_tidy_schemas_all() Workflow$get_tbls() Workflow$clone()","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Workflow Object — Workflow","text":"Create new Workflow object.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$new(name = NULL, path = NULL, tools = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow Object — Workflow","text":"name (character(1)) Name workflow. path (character(n)) Path(s) workflow results. tools (list(n)) List Tools compose Workflow.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"Workflow Object — Workflow","text":"Print details File.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$print(...)"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow Object — Workflow","text":"... (ignored).","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-filter-files-","dir":"Reference","previous_headings":"","what":"Method filter_files()","title":"Workflow Object — Workflow","text":"Filter files given workflow directory.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$filter_files(include = NULL, exclude = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow Object — Workflow","text":"include (character(n)) Files include. exclude (character(n)) Files exclude.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-list-files-","dir":"Reference","previous_headings":"","what":"Method list_files()","title":"Workflow Object — Workflow","text":"List files given workflow directory.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$list_files(type = c(\"file\", \"symlink\"))"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow Object — Workflow","text":"type (character(1)) File types(s) return (e.g. , file, directory, symlink). See fs::dir_info.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Workflow Object — Workflow","text":"tibble files found Tool.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-tidy-","dir":"Reference","previous_headings":"","what":"Method tidy()","title":"Workflow Object — Workflow","text":"Tidy Workflow files.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$tidy(tidy = TRUE, keep_raw = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow Object — Workflow","text":"tidy (logical(1)) raw parsed tibbles get tidied? keep_raw (logical(1)) raw parsed tibbles kept final output?","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Workflow Object — Workflow","text":"self invisibly.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-write-","dir":"Reference","previous_headings":"","what":"Method write()","title":"Workflow Object — Workflow","text":"Write tidy tibbles.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$write(odir = \".\", format = \"tsv\", id = NULL, dbconn = NULL)"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow Object — Workflow","text":"odir (character(1)) Directory path output tidy files. format (character(1)) Format output files. id (character(1)) ID use dataset (e.g. wfrid.123, prid.456). dbconn (DBIConnection) Database connection object (see DBI::dbConnect).","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Workflow Object — Workflow","text":"tibble tidy data output location prefix.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-nemofy-","dir":"Reference","previous_headings":"","what":"Method nemofy()","title":"Workflow Object — Workflow","text":"Parse, filter, tidy write files.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$nemofy(   odir = \".\",   format = \"tsv\",   id = NULL,   dbconn = NULL,   include = NULL,   exclude = NULL )"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow Object — Workflow","text":"odir (character(1)) Directory path output tidy files. format (character(1)) Format output files. id (character(1)) ID use dataset (e.g. wfrid.123, prid.456). dbconn (DBIConnection) Database connection object (see DBI::dbConnect). include (character(n)) Files include. exclude (character(n)) Files exclude.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Workflow Object — Workflow","text":"tibble tidy data output location prefix.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-get-raw-schemas-all-","dir":"Reference","previous_headings":"","what":"Method get_raw_schemas_all()","title":"Workflow Object — Workflow","text":"Get raw schemas Tools.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$get_raw_schemas_all()"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Workflow Object — Workflow","text":"Tibble names tool file, schema version.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-get-tidy-schemas-all-","dir":"Reference","previous_headings":"","what":"Method get_tidy_schemas_all()","title":"Workflow Object — Workflow","text":"Get tidy schemas Tools.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$get_tidy_schemas_all()"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Workflow Object — Workflow","text":"Tibble names tool tbl, schema version.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-get-tbls-","dir":"Reference","previous_headings":"","what":"Method get_tbls()","title":"Workflow Object — Workflow","text":"Get tidy tbls Tools.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$get_tbls()"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Workflow Object — Workflow","text":"Tibble tidy tbls Tools.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Workflow Object — Workflow","text":"objects class cloneable method.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Workflow Object — Workflow","text":"","code":"Workflow$clone(deep = FALSE)"},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Workflow Object — Workflow","text":"deep Whether make deep clone.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/Workflow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Workflow Object — Workflow","text":"","code":"if (FALSE) { # \\dontrun{ path <- here::here(\"nogit/oa_v2\") tools <- list(align = Alignments, sigs = Sigs) wf1 <- Workflow$new(name = \"foo\", path = path, tools = tools) wf1$list_files() wf1$nemofy(     odir = \"nogit/test_data\",     format = \"parquet\",     id = \"run1\" )  dbconn <- DBI::dbConnect(   drv = RPostgres::Postgres(),   dbname = \"nemo\",   user = \"orcabus\" ) wf1$nemofy(     format = \"db\",     id = \"runABC\",     dbconn = dbconn )  } # }"},{"path":"https://umccr.github.io/tidywigits/reference/config_prep_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare config from raw file — config_prep_raw","title":"Prepare config from raw file — config_prep_raw","text":"Prepares config raw file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/config_prep_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare config from raw file — config_prep_raw","text":"","code":"config_prep_raw(path, name, descr, pat, type = \"tsv\", v = \"latest\", ...)"},{"path":"https://umccr.github.io/tidywigits/reference/config_prep_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare config from raw file — config_prep_raw","text":"path (character(1)) File path. name (character(1)) File nickname. descr (character(1)) File description. pat (character(1)) File pattern. type (character(1)) File type. v (character(1)) File version. ... Passed readr::read_delim.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/config_prep_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare config from raw file — config_prep_raw","text":"","code":"if (FALSE) { # \\dontrun{ path <- here::here(\"nogit/oa_v2/esvee/prep/COLO829_tumor.esvee.prep.fragment_length.tsv\") name <- \"prepfraglen\" descr <- \"Fragment length stats.\" pat <- \"\\\\.esvee\\\\.prep\\\\.fragment_length\\\\.tsv$\" type <- \"tsv\" v <- \"latest\" l <- config_prep_raw(path = path, name = name, descr = descr, pat = pat, type = type, v = v) } # }"},{"path":"https://umccr.github.io/tidywigits/reference/config_prep_raw_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare config schema from raw file — config_prep_raw_schema","title":"Prepare config schema from raw file — config_prep_raw_schema","text":"Prepares config schema raw file.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/config_prep_raw_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare config schema from raw file — config_prep_raw_schema","text":"","code":"config_prep_raw_schema(path, ...)"},{"path":"https://umccr.github.io/tidywigits/reference/config_prep_raw_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare config schema from raw file — config_prep_raw_schema","text":"path (character(1)) File path. ... Passed readr::read_delim.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/config_prep_raw_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare config schema from raw file — config_prep_raw_schema","text":"","code":"if (FALSE) { # \\dontrun{ path <- \"~/projects/tidywigits/nogit/oa_v2/esvee/prep/COLO829_tumor.esvee.prep.fragment_length.tsv\" config_prep_raw_schema(path = path, delim = \"\\t\") } # }"},{"path":"https://umccr.github.io/tidywigits/reference/date_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Print current timestamp for logging — date_log","title":"Print current timestamp for logging — date_log","text":"Print current timestamp logging","code":""},{"path":"https://umccr.github.io/tidywigits/reference/date_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print current timestamp for logging — date_log","text":"","code":"date_log()"},{"path":"https://umccr.github.io/tidywigits/reference/date_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print current timestamp for logging — date_log","text":"Current timestamp character.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/empty_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Empty Tibble — empty_tbl","title":"Create Empty Tibble — empty_tbl","text":"https://stackoverflow.com//62535671/2169986. Useful handling edge cases empty data. e.g. virusbreakend.vcf.summary.tsv","code":""},{"path":"https://umccr.github.io/tidywigits/reference/empty_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Empty Tibble — empty_tbl","text":"","code":"empty_tbl(cnames, ctypes = readr::cols(.default = \"c\"))"},{"path":"https://umccr.github.io/tidywigits/reference/empty_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Empty Tibble — empty_tbl","text":"cnames (character(n)) Character vector column names use. ctypes (character(n)) Character vector column types corresponding cnames.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/empty_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Empty Tibble — empty_tbl","text":"tibble 0 rows given column names.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/list_files_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"List Files — list_files_dir","title":"List Files — list_files_dir","text":"Lists files inside given directory.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/list_files_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Files — list_files_dir","text":"","code":"list_files_dir(d, max_files = NULL, type = \"file\")"},{"path":"https://umccr.github.io/tidywigits/reference/list_files_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Files — list_files_dir","text":"d (character(n)) Character vector one paths. max_files (integer(1)) Max files returned. type (character(n)) File type(s) return (e.g. , file, directory, symlink). See fs::dir_info.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/list_files_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Files — list_files_dir","text":"tibble file basename, size, last modification timestamp full path.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/list_files_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Files — list_files_dir","text":"","code":"d <- system.file(\"R\", package = \"tidywigits\") x <- list_files_dir(d)"},{"path":"https://umccr.github.io/tidywigits/reference/nemo_out_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Output Formats Supported — nemo_out_formats","title":"Output Formats Supported — nemo_out_formats","text":"Output Formats Supported","code":""},{"path":"https://umccr.github.io/tidywigits/reference/nemo_out_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output Formats Supported — nemo_out_formats","text":"","code":"nemo_out_formats()"},{"path":"https://umccr.github.io/tidywigits/reference/nemo_out_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Output Formats Supported — nemo_out_formats","text":"Character vector supported output formats.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/nemo_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write data — nemo_write","title":"Write data — nemo_write","text":"Writes tabular data given format.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/nemo_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write data — nemo_write","text":"","code":"nemo_write(   d,   fpfix = NULL,   format = \"tsv\",   id = NULL,   dbconn = NULL,   dbtab = NULL )"},{"path":"https://umccr.github.io/tidywigits/reference/nemo_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write data — nemo_write","text":"d (data.frame()) data.frame (tibble) tidy data. fpfix (character(1)) File prefix. file extension generated automatically via format argument. format db, inserted nemo_pfix column. format (character(1)) Output format. One tsv, csv, parquet, rds, db. id (character(1)) ID use first nemo_id column table. dbconn (DBIConnection(1)) Database connection object (see DBI::dbConnect). Used format db. dbtab (character(1)) Database table name (see DBI::dbWriteTable). Used format db.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/nemo_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write data — nemo_write","text":"","code":"d <- tibble::tibble(name = \"foo\", data = 123) fpfix <- file.path(tempdir(), \"data_test1\") format <- \"csv\" id <- \"run1\" nemo_write(d = d, fpfix = fpfix, format = format, id = id) readr::read_csv(glue::glue(\"{fpfix}.csv.gz\")) #> Rows: 1 Columns: 3 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr (2): nemo_id, name #> dbl (1): data #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message. #> # A tibble: 1 × 3 #>   nemo_id name   data #>   <chr>   <chr> <dbl> #> 1 run1    foo     123 if (FALSE) { # RPostgres::postgresHasDefault() # for database writing con <- DBI::dbConnect(RPostgres::Postgres()) tbl_nm <- \"awesome_tbl\" nemo_write(d = d, fpfix = basename(fpfix), format = \"db\", id = \"123\", dbconn = con, dbtab = tbl_nm) DBI::dbListTables(con) DBI::dbReadTable(con, tbl_nm) DBI::dbDisconnect(con) }"},{"path":"https://umccr.github.io/tidywigits/reference/parse_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse file — parse_file","title":"Parse file — parse_file","text":"Parses files.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/parse_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse file — parse_file","text":"","code":"parse_file(fpath, pname, schemas_all, delim = \"\\t\", ...)"},{"path":"https://umccr.github.io/tidywigits/reference/parse_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse file — parse_file","text":"fpath (character(1)) File path. pname (character(1)) Parser name (e.g. \"breakends\" - see docs). schemas_all (tibble()) Tibble name, version schema list-col. delim (character(1)) File delimiter. ... Passed readr::read_delim.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/parse_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse file — parse_file","text":"","code":"if (FALSE) { # \\dontrun{ path <- here::here(   \"nogit/oa_v1/bamtools\" ) x <- Tool$new(\"bamtools\", path) schemas_all <- x$raw_schemas_all pname <- \"wgsmetrics\" fpath <- file.path(path, \"L2500331.wgsmetrics\") parse_file(fpath, pname, schemas_all) } # }"},{"path":"https://umccr.github.io/tidywigits/reference/schema_guess.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess Schema — schema_guess","title":"Guess Schema — schema_guess","text":"Given tibble available schemas, filters one matching given column names. Errors unsuccessful.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/schema_guess.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess Schema — schema_guess","text":"","code":"schema_guess(pname, cnames, schemas_all)"},{"path":"https://umccr.github.io/tidywigits/reference/schema_guess.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess Schema — schema_guess","text":"pname (character(1)) Parser name. cnames (character(n)) Column names. schemas_all (tibble()) Tibble name, version schema list-col.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/schema_guess.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guess Schema — schema_guess","text":"","code":"if (FALSE) { # \\dontrun{ x <- here::here(   \"nogit/oa_v1/linx/somatic_annotations/L2500331.linx.vis_copy_number.tsv\" ) pname <- \"viscn\" cnames <- file_hdr(x) conf <- Config$new(\"linx\") schemas_all <- conf$get_raw_schemas_all() schema_guess(pname, cnames, schemas_all) } # }"},{"path":"https://umccr.github.io/tidywigits/reference/tidywigits-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidywigits: Tidy WiGiTS — tidywigits-package","title":"tidywigits: Tidy WiGiTS — tidywigits-package","text":"Tidies outputs Hartwig Medical Foundation's WiGiTS suite genome transcriptome analysis tools. Writes various formats downstream ingestion data warehouses databases.","code":""},{"path":[]},{"path":"https://umccr.github.io/tidywigits/reference/tidywigits-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidywigits: Tidy WiGiTS — tidywigits-package","text":"Maintainer: Peter Diakumis peterdiakumis@gmail.com (ORCID)","code":""},{"path":"https://umccr.github.io/tidywigits/reference/valid_out_fmt.html","id":null,"dir":"Reference","previous_headings":"","what":"Output Format is Valid — valid_out_fmt","title":"Output Format is Valid — valid_out_fmt","text":"Checks specified output format valid.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/valid_out_fmt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Output Format is Valid — valid_out_fmt","text":"","code":"valid_out_fmt(x)"},{"path":"https://umccr.github.io/tidywigits/reference/valid_out_fmt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Output Format is Valid — valid_out_fmt","text":"x Output format.","code":""},{"path":"https://umccr.github.io/tidywigits/reference/valid_out_fmt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Output Format is Valid — valid_out_fmt","text":"","code":"valid_out_fmt(\"tsv\") #> [1] TRUE"}]
